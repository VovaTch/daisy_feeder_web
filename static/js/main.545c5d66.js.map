{"version":3,"file":"static/js/main.545c5d66.js","mappings":"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","sources":["context/global.jsx","styles/drawer.jsx","styles/image.jsx","components/CustomDrawer.jsx","utils/Others.jsx","api/send/deleteFeedItem.jsx","styles/table.jsx","styles/containers.jsx","components/Table.jsx","api/send/sendFeedItem.jsx","styles/modal.jsx","styles/inputs.jsx","styles/buttons.jsx","components/FeedItemForm.jsx","styles/summation.jsx","components/FloatingSummation.jsx","components/FloatingButton.jsx","api/fetch/fetchFeedItem.jsx","api/fetch/fetchMinimalUser.jsx","api/fetch/fetchFromSecureStorage.jsx","api/send/updateFriendRequestStatus.jsx","api/send/deleteFriendRequest.jsx","styles/statusBar.jsx","screens/Home.jsx","styles/dropdown.jsx","components/DropDown.jsx","screens/History.jsx","styles/plots.jsx","components/Plot.jsx","styles/highLevel.jsx","screens/Plots.jsx","components/SettingsClear.jsx","components/OpenFriendRequestWindow.jsx","api/fetch/fetchFriendRequests.jsx","api/send/removeFriend.jsx","components/FriendsList.jsx","api/send/sendFriendRequest.jsx","components/CreateFriendRequestPopup.jsx","screens/Settings.jsx","api/fetch/fetchLoginUser.jsx","api/fetch/validateToken.jsx","styles/checkbox.jsx","screens/Landing.jsx","api/send/createUser.jsx","screens/SignUp.jsx","navigation/navigators.jsx","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useState, createContext } from \"react\";\n\nconst context = createContext();\n\n/**\n * Daisy's Provider Component.\n *\n * This component serves as the provider for the global context in Daisy's Feeder application.\n * It manages the state and provides the necessary data and functions to its children components.\n * Daisy, the cat, approves of this provider and guarantees a purr-fect user experience.\n *\n * @component\n * @param {Object} props - The component props.\n * @param {ReactNode} props.children - The child components to be wrapped by the provider.\n * @returns {ReactNode} The wrapped child components.\n */\nconst Provider = ({ children }) => {\n  // TODO: to be filled\n\n  // Background images\n  const landingBackgroundImage = require(\"../assets/Landing-Background.jpg\");\n  const screenBackgroundImage = require(\"../assets/Screen-Background.jpg\");\n  const drawerBackgroundImage = require(\"../assets/Drawer.jpg\");\n\n  // User state\n  const [token, setToken] = useState();\n  const [errorMsg, setErrorMsg] = useState();\n  const [activeUser, setActiveUser] = useState();\n  const [minUsers, setMinUsers] = useState([]);\n  const [friendRequests, setFriendRequests] = useState([]);\n\n  // Set domain\n  // const [domain, setDomain] = useState(\"http://192.168.1.79:8000/\");\n  // eslint-disable-next-line no-undef\n  // const [domain, setDomain] = useState(process.env.EXPO_PUBLIC_API_URL);\n  const [domain, setDomain] = useState(\"https://vovatch.pythonanywhere.com/\");\n\n  // Data # TODO: to be updated\n  const [feedItems, setFeedItems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const globalContext = {\n    domain,\n    feedItems,\n    isLoading,\n    token,\n    errorMsg,\n    activeUser,\n    minUsers,\n    friendRequests,\n    landingBackgroundImage,\n    screenBackgroundImage,\n    drawerBackgroundImage,\n    setFeedItems,\n    setIsLoading,\n    setToken,\n    setDomain,\n    setActiveUser,\n    setErrorMsg,\n    setMinUsers,\n    setFriendRequests,\n  };\n\n  return <context.Provider value={globalContext}>{children}</context.Provider>;\n};\n\nexport { context, Provider };\n","import { StyleSheet } from \"react-native\";\n\nexport const drawerStyles = StyleSheet.create({\n  drawerHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 16,\n  },\n  drawerHeaderText: {\n    fontSize: 24,\n    color: \"white\",\n    fontWeight: \"bold\",\n  },\n  drawerContentContainer: {\n    flex: 1,\n    paddingTop: 16,\n    // backgroundColor: \"#d1c2a3\",\n  },\n  logo: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginRight: 12,\n    marginLeft: 12,\n  },\n  imageHex: {},\n  iconFocused: {\n    color: \"white\",\n    fontSize: 24,\n  },\n  iconNotFocused: {\n    color: \"white\",\n    fontSize: 24,\n  },\n  itemFocused: {\n    backgroundColor: \"#1b1b1b\",\n    color: \"white\",\n    fontSize: 24,\n  },\n  itemNotFocused: {\n    color: \"white\",\n    fontSize: 24,\n  },\n});\n","import { StyleSheet } from \"react-native\";\n\nexport const imageStyles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    resizeMode: \"cover\", // or 'stretch'\n    justifyContent: \"center\",\n  },\n});\n","import React, { useContext } from \"react\";\nimport { View, Image, Text, ImageBackground } from \"react-native\";\nimport {\n  DrawerContentScrollView,\n  DrawerItemList,\n} from \"@react-navigation/drawer\";\n\nimport { drawerStyles } from \"../styles/drawer\";\nimport { imageStyles } from \"../styles/image\";\nimport { context } from \"../context/global\";\n\n/**\n * Renders the header component for the custom drawer.\n *\n * @returns {JSX.Element} The header component.\n * @description This component displays the header for the custom drawer in the Daisy Feeder application.\n * It includes an image of Daisy the cat, the logo of the application, and the text \"Daisy Feeder\".\n * The header is used to provide a visual representation of the application's branding and identity.\n */\nexport const CustomDrawerHeader = () => {\n  return (\n    <View style={drawerStyles.drawerHeader}>\n      {/* <HexagonMask size={100} /> */}\n      <Image\n        source={require(\"../assets/daisy_navigator.jpeg\")} // Replace with the actual path\n        style={drawerStyles.logo}\n      />\n      <Text style={drawerStyles.drawerHeaderText}>Daisy{\"\\n\"}Feeder</Text>\n    </View>\n  );\n};\n\n/**\n * Renders the custom content for the drawer component.\n *\n * @param {object} props - The props passed to the component.\n * @returns {JSX.Element} The JSX element representing the custom drawer content.\n *\n * @example\n * // Usage\n * <CustomDrawerContent />\n *\n * @description\n * This component renders the custom content for the drawer component. It uses the global context to access the drawer background image. The content includes a header component, a list of drawer items, and a background image.\n *\n * Daisy the cat approves of this custom drawer content!\n */\nexport const CustomDrawerContent = (props) => {\n  // get context\n  const globalContext = useContext(context);\n  const { drawerBackgroundImage } = globalContext;\n\n  return (\n    //\n    <View style={drawerStyles.drawerContentContainer}>\n      <ImageBackground\n        source={drawerBackgroundImage}\n        style={imageStyles.backgroundImage}\n      >\n        <DrawerContentScrollView {...props}>\n          <CustomDrawerHeader />\n          <DrawerItemList {...props} />\n        </DrawerContentScrollView>\n      </ImageBackground>\n    </View>\n  );\n};\n","/**\n * Generates a random string of characters. Used for generate random ids.\n * @param {number} length Length of the string.\n * @returns A random string of characters with a length `length`.\n */\n\nexport function makeId(length) {\n  let result = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const charactersLength = characters.length;\n  let counter = 0;\n  while (counter < length) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    counter += 1;\n  }\n  return result;\n}\n\nexport function getDateArray(feedItemData) {\n  let runningArray = [];\n  for (let idx = 0; idx < feedItemData.length; idx++) {\n    runningArray = [\n      ...runningArray,\n      new Date(feedItemData[idx].datetime).toISOString().split(\"T\")[0],\n    ];\n  }\n  return runningArray;\n}\n\nexport function getUniqueDateArray(dateArray) {\n  return [...new Set(dateArray)];\n}\n\nexport function getDateDropdownData(dateArray) {\n  let runningArray = [];\n  for (let idx = 0; idx < dateArray.length; idx++) {\n    runningArray = [\n      ...runningArray,\n      {\n        label: dateArray[idx],\n        value: dateArray[idx],\n      },\n    ];\n  }\n  return runningArray;\n}\n\nexport function getDateFilteredFoodItems(foodItems, requiredDate) {\n  return foodItems.filter((item) => {\n    const itemDate = new Date(item.datetime).toISOString().split(\"T\")[0];\n    return itemDate === requiredDate;\n  });\n}\n\nexport function getReverseFilteredFoodItems(foodItems, exceptDate) {\n  return foodItems.filter((item) => {\n    const itemDate = new Date(item.datetime).toISOString().split(\"T\")[0];\n    return itemDate !== exceptDate;\n  });\n}\n\nexport function identifyInputType(input) {\n  // Regular expression to check for email pattern\n  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  if (emailPattern.test(input)) {\n    return \"email\";\n  } else {\n    return \"username\";\n  }\n}\n\nexport function getUsernameById(minUsers, id) {\n  const selectedUser = minUsers.find((minUsers) => minUsers.id === id);\n  return selectedUser ? selectedUser.username : \"\";\n}\n\nexport function getUserFilteredFoodItems(foodItems, activeUser) {\n  const sendingIds = [activeUser.id, ...activeUser.profile.friends];\n  return foodItems.filter((item) => sendingIds.includes(item.feeder));\n}\n\nexport function getPendingFriendRequests(friendRequests) {\n  return friendRequests.filter((item) => item.pending);\n}\n\nexport function emailIsValidated(email) {\n  // Regular expression for basic email validation\n  const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n  if (emailRegex.test(email)) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import axios from \"axios\";\n\nimport { getReverseFilteredFoodItems } from \"../../utils/Others\";\n\n/**\n * Sends a request to delete a feeding item from the database. Daisy is sad :(.\n * @param {number} id Item ID number to delete\n * @param {*} data Data container to delete from\n * @param {*} setData Data setter\n * @param {*} basePath Base path for the API\n */\nexport const deleteFeedItem = async (id, data, setData, basePath) => {\n  try {\n    console.log(`Attempting to delete item ${id}...`);\n    await axios.delete(basePath + \"api/feeditem/\" + String(id) + \"/\");\n    const newData = data.filter((data) => data.id !== id);\n    setData(newData);\n    console.log(`Removed item id ${id}`);\n  } catch (error) {\n    console.log(`Error in deleting item id ${id}: ${error}`);\n  }\n};\n\n/**\n * Deletes all feeding history up to today for the user and for all friends. Daisy is REALLLLLLY\n * sad :(.\n * @param {*} data2delete Data container to delete from\n * @param {*} setData2delete Data setter\n * @param {*} basePath Base path for the API\n */\nexport const clearHistory = async (\n  data2delete,\n  setData2delete,\n  basePath = \"http://192.168.1.79:8000/\"\n) => {\n  try {\n    console.log(`Attempting to clear history...`);\n    const todayDate = new Date().toISOString().split(\"T\")[0];\n    const filteredData = getReverseFilteredFoodItems(data2delete, todayDate);\n    for (let idx = 0; idx < filteredData.length; idx++) {\n      deleteFeedItem(\n        filteredData[idx].id,\n        data2delete,\n        setData2delete,\n        basePath\n      );\n    }\n    console.log(\"Cleared feeding history up to today.\");\n  } catch (error) {\n    console.log(`Failed to clear history: ${error}`);\n  }\n};\n","import { StyleSheet } from \"react-native\";\n\n/**\n * Styles for the table component\n */\nexport const tableStyles = StyleSheet.create({\n  table: {\n    flex: 1,\n    marginTop: 15,\n    marginBottom: 100,\n    marginLeft: 10,\n    marginRight: 10,\n    width: 350,\n    borderColor: \"#eee\",\n    borderWidth: 0,\n    borderRadius: 10,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n  },\n  innerText: {\n    textAlign: \"center\",\n    fontSize: 16,\n    // fontFamily: \"notoserif\",\n  },\n  amount_wet: {\n    fontSize: 40,\n    color: \"blue\",\n    fontWeight: \"bold\",\n    // fontFamily: \"notoserif\",\n  },\n  amount_dry: {\n    fontSize: 40,\n    color: \"red\",\n    fontWeight: \"bold\",\n  },\n  leftColumn: {\n    color: \"red\",\n    padding: 10,\n    alignItems: \"flex-start\",\n  },\n  rightColumn: {\n    padding: 10,\n    alignItems: \"center\", // Align the text to the right\n  },\n  settingsTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n  },\n});\n","import { StyleSheet } from \"react-native\";\n\nexport const containerStyles = StyleSheet.create({\n  // Container for the page view\n  highLevelContainers: {\n    flex: 1,\n    // backgroundColor: \"orange\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\",\n  },\n  inputContainer: {\n    width: \"100%\",\n    borderRadius: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: 0,\n  },\n  formContainer: {\n    width: \"80%\",\n  },\n  tableContainer: {\n    flexDirection: \"row\", // Row layout to create two columns\n    justifyContent: \"space-between\", // Space evenly between columns\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderColor: \"#ccc\",\n    borderWidth: 0,\n    borderRadius: 10,\n    marginTop: 5,\n    margin: 5,\n    backgroundColor: \"rgba(255, 255, 255, 0.75)\",\n  },\n  settingsContainer: {\n    justifyContent: \"space-between\", // Space evenly between columns\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderColor: \"#ccc\",\n    borderWidth: 0,\n    borderRadius: 10,\n    marginTop: 5,\n    margin: 5,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n  },\n  rowButtonContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n  },\n});\n","import React, { useContext } from \"react\";\nimport { View, Text, TouchableOpacity, ScrollView } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport { deleteFeedItem } from \"../api/send/deleteFeedItem\";\nimport { getUsernameById } from \"../utils/Others\";\nimport { tableStyles } from \"../styles/table\";\nimport { containerStyles } from \"../styles/containers\";\nimport { context } from \"../context/global\";\n\nexport const Table = ({ foodItems, setFoodItems, minUsers, requiredDate }) => {\n  // Get context\n  const globalContext = useContext(context);\n  const { domain } = globalContext;\n\n  const filteredFoodItems = foodItems.filter((item) => {\n    const itemDate = new Date(item.datetime).toISOString().split(\"T\")[0];\n    return itemDate === requiredDate;\n  });\n\n  return (\n    <ScrollView>\n      {/* Fields, loop with map */}\n      {filteredFoodItems.map((foodItem, idx) => (\n        <View\n          key={`box-container-${idx}`}\n          style={containerStyles.tableContainer}\n        >\n          <View key={`left-side-${idx}`} style={tableStyles.leftColumn}>\n            <Text key={`time-${idx}`} style={tableStyles.innerText}>\n              {new Date(foodItem.datetime).toLocaleTimeString()}\n            </Text>\n            <Text key={`feeder-${idx}`} style={tableStyles.innerText}>\n              {getUsernameById(minUsers, foodItem.feeder)}\n            </Text>\n            <Text key={`type-${idx}`} style={tableStyles.innerText}>\n              {foodItem.food_choice}\n            </Text>\n          </View>\n          <View key={`middle-${idx}`} style={tableStyles.rightColumn}>\n            <Text\n              key={`amount-${idx}`}\n              style={\n                foodItem.food_choice === \"wet\"\n                  ? tableStyles.amount_wet\n                  : tableStyles.amount_dry\n              }\n            >\n              {foodItem.amount}\n            </Text>\n          </View>\n          <View key={`right-${idx}`} style={tableStyles.rightColumn}>\n            <TouchableOpacity\n              style={{ alignContent: \"center\", padding: 10 }}\n              key={`delete-${idx}`}\n              onPress={() => {\n                deleteFeedItem(foodItem.id, foodItems, setFoodItems, domain);\n              }}\n            >\n              <Ionicons name=\"trash\" color={\"black\"} size={30} />\n            </TouchableOpacity>\n          </View>\n        </View>\n      ))}\n    </ScrollView>\n  );\n};\n","import axios from \"axios\";\n\nexport const sendFeedItem = async (data, basePath) => {\n  try {\n    console.log(`Trying to send data...`);\n    console.log(`Food type: ${data.food_choice}`);\n    await axios.post(basePath + \"api/feeditem/\", data);\n    console.log(`Sent feeding data.`);\n  } catch (error) {\n    console.error(error);\n    return error;\n  }\n};\n","import { StyleSheet } from \"react-native\";\n\nexport const modalStyles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  modalContent: {\n    width: 300,\n    backgroundColor: \"white\",\n    padding: 20,\n    borderRadius: 10,\n    elevation: 5,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 10,\n  },\n  modalText: {\n    marginBottom: 20,\n  },\n  modalContainerInner: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  modalContentInner: {\n    backgroundColor: \"white\",\n    padding: 20,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n});\n","import { StyleSheet } from \"react-native\";\n\nexport const textInputStyles = StyleSheet.create({\n  textInput: {\n    width: \"100%\",\n    borderRadius: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderWidth: 0,\n  },\n\n  eyeIcon: {\n    position: \"absolute\",\n    right: 14,\n    top: 8,\n    borderLeftWidth: 1,\n    paddingLeft: 10,\n    borderColor: \"#cecece\",\n  },\n\n  label: {\n    color: \"white\",\n    marginTop: 10,\n  },\n\n  textInputLarge: {\n    height: 40,\n    borderColor: \"gray\",\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 15,\n    paddingLeft: 10,\n    color: \"black\",\n    backgroundColor: \"white\",\n    width: \"100%\",\n  },\n  loginErrorText: {\n    color: \"#8d0000\",\n    marginBottom: 10,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n","import { StyleSheet } from \"react-native\";\n\nexport const buttonStyles = StyleSheet.create({\n  standardButton: {\n    backgroundColor: \"#884400\",\n    padding: 12,\n    margin: 5,\n    borderRadius: 5,\n    alignItems: \"center\",\n    verticalAlign: \"center\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n  okButton: {\n    backgroundColor: \"green\",\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginRight: 5,\n    alignItems: \"center\",\n  },\n  cancelButton: {\n    backgroundColor: \"red\",\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    marginLeft: 5,\n    alignItems: \"center\",\n  },\n  backButton: {\n    backgroundColor: \"transparent\",\n    padding: 15,\n    borderRadius: 5,\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"white\",\n    margin: 5,\n  },\n  floatingAddButton: {\n    backgroundColor: \"#682100\", // Adjust the color as needed\n    borderRadius: 30,\n    width: 60,\n    height: 60,\n    position: \"absolute\",\n    bottom: 20,\n    right: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    elevation: 3, // Android-only: Add a subtle shadow\n  },\n  addButtonText: {\n    color: \"#fff\",\n    fontSize: 40,\n    fontWeight: \"bold\",\n  },\n  timeButton: {\n    backgroundColor: \"white\",\n    borderColor: \"#dddddd\",\n    borderRadius: 10,\n    borderWidth: 1,\n    margin: 5,\n    marginBottom: 25,\n    paddingTop: 30,\n    paddingBottom: 30,\n    padding: 10,\n  },\n  buttonRowContainer: {\n    flexDirection: \"row\", // Align children in a row\n    justifyContent: \"center\", // Center content horizontally\n    alignItems: \"center\", // Center content vertically\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 5,\n    left: -15,\n  },\n  buttonIcon: {\n    marginRight: 10,\n    fontSize: 24,\n    color: \"white\",\n  },\n});\n","import React, { useContext, useState } from \"react\";\nimport {\n  View,\n  Modal,\n  TextInput,\n  Text,\n  Platform,\n  TouchableOpacity,\n} from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\n\nimport { sendFeedItem } from \"../api/send/sendFeedItem\";\nimport { context } from \"../context/global\";\nimport { modalStyles } from \"../styles/modal\";\nimport { textInputStyles } from \"../styles/inputs\";\nimport { buttonStyles } from \"../styles/buttons\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport const FeedItemForm = ({ isVisible, onClose, onSubmit }) => {\n  // context\n  const globalContext = useContext(context);\n  const { domain, activeUser } = globalContext;\n\n  const [amount, setAmount] = useState(\"\");\n  // const [feederName, setFeederName] = useState(\"\");\n  const [foodType, setFoodType] = useState(\"dry\");\n  const [feedingTime, setFeedingTime] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const handleSubmit = () => {\n    // Store all the fields in a dictionary\n    const feedingData = {\n      feeder: activeUser.id,\n      amount: parseInt(amount),\n      datetime: feedingTime.toISOString(),\n      food_choice: foodType,\n    };\n\n    // Send data\n    sendFeedItem(feedingData, domain);\n\n    // Reset the form variables\n    setAmount(\"\");\n    setFoodType(\"dry\");\n    setFeedingTime(new Date());\n  };\n\n  const handleDateChange = (event, selectedDate) => {\n    setShowDatePicker(Platform.OS === \"ios\"); // On iOS, the date picker is modal\n    if (selectedDate) {\n      setFeedingTime(selectedDate);\n    }\n  };\n\n  return (\n    <Modal transparent={true} visible={isVisible} onRequestClose={onClose}>\n      <View style={modalStyles.modalContainer}>\n        <View style={modalStyles.modalContent}>\n          {/* Food amount */}\n          <Text>Food amount:</Text>\n          <TextInput\n            placeholder=\"Enter amount\"\n            keyboardType=\"numeric\"\n            style={textInputStyles.textInputLarge}\n            value={amount}\n            onChangeText={(text) => setAmount(text)}\n          />\n\n          {/* Dry or wet */}\n          <Text>Food Type:</Text>\n          <View>\n            <Picker\n              selectedValue={foodType}\n              onValueChange={(itemValue) => setFoodType(itemValue)}\n            >\n              <Picker.Item label=\"Dry\" value=\"dry\" />\n              <Picker.Item label=\"Wet\" value=\"wet\" />\n            </Picker>\n          </View>\n\n          {/* Time of feeding */}\n          <Text>Feeding Time:</Text>\n          <TouchableOpacity\n            style={buttonStyles.timeButton}\n            onPress={() => setShowDatePicker(true)}\n          >\n            <Text>{`Pick ${feedingTime.toLocaleTimeString()}`}</Text>\n          </TouchableOpacity>\n          {showDatePicker && (\n            <DateTimePicker\n              style={buttonStyles.timeButton}\n              value={feedingTime}\n              mode=\"time\"\n              is24Hour={true}\n              display=\"default\"\n              onChange={handleDateChange}\n            />\n          )}\n\n          {/* Submit and cancel buttons */}\n          <TouchableOpacity\n            style={buttonStyles.standardButton}\n            onPress={() => {\n              onSubmit();\n              handleSubmit();\n            }}\n          >\n            <View style={buttonStyles.buttonRowContainer}>\n              <Ionicons name=\"checkmark\" style={buttonStyles.buttonIcon} />\n              <Text style={buttonStyles.buttonText}>Submit</Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={buttonStyles.standardButton}\n            onPress={onClose}\n          >\n            <View style={buttonStyles.buttonRowContainer}>\n              <Ionicons name=\"close\" style={buttonStyles.buttonIcon} />\n              <Text style={buttonStyles.buttonText}>Cancel</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n","import { StyleSheet } from \"react-native\";\n\nexport const summationStyles = StyleSheet.create({\n  floatingView: {\n    position: \"absolute\",\n    bottom: \"5%\",\n    left: \"10%\",\n    right: \"15%\",\n    borderColor: \"#ccc\",\n  },\n  auxText: {\n    fontSize: 18,\n  },\n  wetText: {\n    fontSize: 30,\n    color: \"blue\",\n    fontWeight: \"bold\",\n  },\n  dryText: {\n    fontSize: 30,\n    color: \"red\",\n    fontWeight: \"bold\",\n  },\n});\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\n\nimport { summationStyles } from \"../styles/summation\";\n\nexport const FloatingSumView = ({ data }) => {\n  return (\n    <View style={summationStyles.floatingView}>\n      <Text style={summationStyles.auxText}>\n        Total wet: <WetSum data={data} /> dry: <DrySum data={data} />\n      </Text>\n    </View>\n  );\n};\n\nconst WetSum = ({ data }) => {\n  return (\n    <Text style={summationStyles.wetText}>\n      {extractAmountIntoArray(data, \"wet\")}\n    </Text>\n  );\n};\n\nconst DrySum = ({ data }) => {\n  return (\n    <Text style={summationStyles.dryText}>\n      {extractAmountIntoArray(data, \"dry\")}\n    </Text>\n  );\n};\n\nfunction extractAmountIntoArray(data, foodType) {\n  const filteredByFoodType = data.filter(\n    (dataItem) => dataItem.food_choice === foodType\n  );\n  let summedAmount = 0;\n  for (let idx = 0; idx < filteredByFoodType.length; idx++) {\n    summedAmount += filteredByFoodType[idx].amount;\n  }\n  return summedAmount;\n}\n","import React from \"react\";\nimport { Text, TouchableOpacity } from \"react-native\";\n\nimport { buttonStyles } from \"../styles/buttons\";\n\nexport const FloatingButton = ({ onPress }) => {\n  return (\n    <TouchableOpacity style={buttonStyles.floatingAddButton} onPress={onPress}>\n      <Text style={buttonStyles.addButtonText}>+</Text>\n    </TouchableOpacity>\n  );\n};\n","import axios from \"axios\";\n\n/**\n * Fetches feedItem objects from a Django backend API for a React Native frontend.\n *\n * @param {Function} setData - A function to update the state with the fetched data.\n * @param {Function} setIsLoading - A function to update the loading state.\n * @param {string} [basePath=\"http://192.168.1.79/\"] - The base path for the backend API.\n * @returns {Promise<void>} A Promise that resolves after the data is fetched and the state is updated.\n *\n * @example\n * // Example usage:\n * fetchFeedItem(setDataFunction, setIsLoadingFunction);\n * // Or with a custom base path:\n * fetchFeedItem(setDataFunction, setIsLoadingFunction, \"http://example.com/\");\n */\nexport const fetchFeedItem = async (setData, setIsLoading, basePath) => {\n  try {\n    console.log(\"Fetching feeding items...\");\n    const response = await axios.get(`${basePath}api/feeditem/`);\n    setData(response.data);\n    setIsLoading(false);\n    console.log(`Successfully fetched ${response.data.length} data-points.`);\n  } catch (error) {\n    console.log(`Failed to fetch data, ${error}`);\n  }\n};\n","import axios from \"axios\";\n\nexport const fetchUserById = async (userId, basePath) => {\n  try {\n    const response = await axios.get(basePath + `api/minimal-user/${userId}/`);\n    console.log(\"User fetched successfully:\", response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching user:\", error);\n    return error;\n  }\n};\n\nexport const fetchMinUsers = async (setMinUsers, setIsLoading, basePath) => {\n  try {\n    const response = await axios.get(basePath + `api/minimal-user/`);\n    setMinUsers(response.data);\n    setIsLoading(false);\n    console.log(\n      `All minimum ${response.data.length} user representation were fetched successfully`\n    );\n  } catch (error) {\n    console.log(\"Error fetching min user list:\", error);\n  }\n};\n","import * as SecureStore from \"expo-secure-store\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Platform } from \"react-native\";\n\n/**\n * Retrieves data from SecureStorage\n * @param {*} key String key for retrieval\n */\nconst retrieveDataMobile = async (key) => {\n  try {\n    const storedAuthToken = await SecureStore.getItemAsync(key);\n    if (storedAuthToken !== null) {\n      console.log(`Retrieved key: ${key}`);\n      return storedAuthToken;\n    } else {\n      console.log(\"Key not found in SecureStorage\");\n    }\n  } catch (error) {\n    console.log(\"Error retrieving key (mobile):\", error);\n  }\n};\n\nconst retrieveDataWeb = async (key) => {\n  try {\n    const storedAuthToken = await AsyncStorage.getItem(key);\n    if (storedAuthToken !== null) {\n      console.log(`Retrieved key: ${key}`);\n      return storedAuthToken;\n    } else {\n      console.log(\"Key not found in SecureStorage\");\n    }\n  } catch (error) {\n    console.log(\"Error retrieving key (web):\", error);\n  }\n};\n\nconst putDataMobile = async (key, value) => {\n  try {\n    await SecureStore.setItemAsync(key, value);\n    console.log(`Stored key: ${key}`);\n  } catch (error) {\n    console.log(\"Error storing key (mobile):\", error);\n    return error;\n  }\n};\n\nconst putDataWeb = async (key, value) => {\n  try {\n    await AsyncStorage.setItem(key, value);\n    console.log(`Stored key: ${key}`);\n  } catch (error) {\n    console.log(\"Error storing key (web):\", error);\n    return error;\n  }\n};\n\n/**\n * Removes data from SecureStorage based on key\n * @param {*} key String key for removal\n */\nconst removeDataMobile = async (key) => {\n  try {\n    await SecureStore.deleteItemAsync(key);\n    console.log(`Data from key ${key} removed successfully`);\n  } catch (error) {\n    console.log(\"Error removing from key (mobile):\", error);\n    return error;\n  }\n};\n\nconst removeDataWeb = async (key) => {\n  try {\n    await AsyncStorage.removeItem(key);\n    console.log(`Data from key ${key} removed successfully`);\n  } catch (error) {\n    console.log(\"Error removing from key (web):\", error);\n    return error;\n  }\n};\n\nexport const retrieveData = async (key) => {\n  try {\n    if (Platform.OS === \"web\") {\n      const retrievedData = await retrieveDataWeb(key);\n      return retrievedData;\n    } else {\n      const retrievedData = await retrieveDataMobile(key);\n      return retrievedData;\n    }\n  } catch (error) {\n    console.log(\"Error retrieving key:\", error);\n  }\n};\n\nexport const putData = async (key, value) => {\n  try {\n    if (Platform.OS === \"web\") {\n      await putDataWeb(key, value);\n    } else {\n      await putDataMobile(key, value);\n    }\n  } catch (error) {\n    console.log(\"Error storing key:\", error);\n  }\n};\n\nexport const removeData = async (key) => {\n  try {\n    if (Platform.OS === \"web\") {\n      await removeDataWeb(key);\n    } else {\n      await removeDataMobile(key);\n    }\n  } catch (error) {\n    console.log(\"Error removing from key:\", error);\n  }\n};\n","import axios from \"axios\";\n\nimport { retrieveData } from \"../fetch/fetchFromSecureStorage\";\n\n/**\n * Updates the friend list of the active user.\n * @param {*} activeUser Active user\n * @param {*} setActiveUser Active user setter\n * @param {*} friendRequests All friend requests\n * @param {*} basePath Base path for the API\n */\nexport const updateFriendStatus = async (\n  activeUser,\n  setActiveUser,\n  friendRequests,\n  basePath\n) => {\n  try {\n    console.log(`Updating friends list...`);\n    const activeUserFriends = activeUser.profile.friends;\n\n    const potentialFriends = friendRequests\n      .filter((item) => !item.pending)\n      .flatMap((item) =>\n        item.to_user === activeUser.id &&\n        !activeUserFriends.includes(item.from_user)\n          ? [item.from_user]\n          : item.from_user === activeUser.id &&\n            !activeUserFriends.includes(item.to_user)\n          ? [item.to_user]\n          : []\n      );\n    console.log(`potentialFriends: ${potentialFriends}`);\n\n    const combinedFriendsArray = Array.from(\n      new Set([...potentialFriends, ...activeUserFriends])\n    );\n\n    await axios.patch(basePath + `api/profile/${activeUser.profile.id}/`, {\n      friends: combinedFriendsArray,\n    });\n\n    const updatedActiveUser = {\n      ...activeUser,\n      profile: { id: activeUser.profile.id, friends: combinedFriendsArray },\n    };\n    setActiveUser(updatedActiveUser);\n\n    console.log(\n      `Updated the friend list of ${activeUser.username} to include ${activeUser.profile.friends.length} friends`\n    );\n  } catch (error) {\n    console.log(\n      `Could not update friend list for ${activeUser.username}: ${error}`\n    );\n  }\n};\n\n/**\n * Updates the friend request status to approved or denied.\n * @param {*} requestId Friend request ID number\n * @param {*} friendRequests All friend requests\n * @param {*} setFriendRequests Friend request setter\n * @param {*} activeUser All active users\n * @param {*} setActiveUser Active user setter\n * @param {*} approved Boolean value for approved or denied\n * @param {*} basePath Base path for the API\n */\nexport const updateFriendRequestStatus = async (\n  requestId,\n  friendRequests,\n  setFriendRequests,\n  activeUser,\n  setActiveUser,\n  approved,\n  basePath\n) => {\n  try {\n    console.log(\n      `Updating friend request ID ${requestId} to status ${\n        approved ? `approved` : `denied`\n      }...`\n    );\n    const token = await retrieveData(\"token\");\n    await axios.post(\n      `${basePath}api/friend-request-response/${requestId}/`,\n      {\n        approved: approved,\n      },\n      {\n        headers: { Authorization: `Token ${token}` },\n      }\n    );\n\n    const updatedFriendRequests = friendRequests.map((item) =>\n      item.id === requestId\n        ? { ...item, approved: approved, pending: false }\n        : item\n    );\n    setFriendRequests(updatedFriendRequests);\n\n    const updatedFriendRequest = updatedFriendRequests.find(\n      (item) => item.id === requestId\n    );\n    const updatedActiveUser = {\n      ...activeUser,\n      profile: {\n        ...activeUser.profile,\n        friends: approved\n          ? [...activeUser.profile.friends, updatedFriendRequest.from_user]\n          : activeUser.profile.friends,\n      },\n    };\n    setActiveUser(updatedActiveUser);\n    console.log(\n      `Updated friend request ID ${requestId} to status ${approved}, updated active user's ${activeUser.username} friends list...`\n    );\n  } catch (error) {\n    console.log(`Failed to update friend request ID ${requestId}: ${error}`);\n  }\n};\n","import axios from \"axios\";\n\nexport const deleteFriendRequest = async (\n  friendRequestId,\n  friendRequests,\n  setFriendRequests,\n  basePath\n) => {\n  try {\n    console.log(`Attempting to remove friend request ID ${friendRequestId}...`);\n    axios.delete(`${basePath}api/friend-requests/${friendRequestId}/`);\n    const updatedFriendRequests = friendRequests.filter(\n      (item) => item.id !== friendRequestId\n    );\n    setFriendRequests(updatedFriendRequests);\n    console.log(`Removed friend request ID ${friendRequestId}`);\n  } catch (error) {\n    console.log(`Failed to remove friend request ID ${friendRequestId}.`);\n  }\n};\n\nexport const deleteAnsweredFriendRequests = async (\n  activeUser,\n  friendRequests,\n  setFriendRequests,\n  basePath\n) => {\n  try {\n    console.log(\n      `Attempting to remove all answered friend requests from user ID ${activeUser.id}`\n    );\n    const answeredFriendRequests = friendRequests.filter(\n      (item) => !item.pending && item.from_user === activeUser.id\n    );\n    const numAnsweredFriendRequests = answeredFriendRequests.length;\n    for (let idx = 0; idx < numAnsweredFriendRequests; idx++) {\n      deleteFriendRequest(\n        answeredFriendRequests[idx].id,\n        friendRequests,\n        setFriendRequests,\n        basePath\n      );\n    }\n    console.log(\n      `Removed all ${numAnsweredFriendRequests} answered friend requests.`\n    );\n  } catch (error) {\n    console.log(`Failed to remove answered friend requests.`);\n  }\n};\n","export const statusBarStyles = {\n  backgroundColor: \"#383838\",\n  barStyle: \"light-content\",\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {\n  View,\n  ActivityIndicator,\n  SafeAreaView,\n  ImageBackground,\n  StatusBar,\n} from \"react-native\";\n\nimport { Table } from \"../components/Table\";\nimport { FeedItemForm } from \"../components/FeedItemForm\";\nimport { FloatingSumView } from \"../components/FloatingSummation\";\nimport {\n  getDateFilteredFoodItems,\n  getUserFilteredFoodItems,\n} from \"../utils/Others\";\nimport { FloatingButton } from \"../components/FloatingButton\";\nimport { context } from \"../context/global\";\nimport { fetchFeedItem } from \"../api/fetch/fetchFeedItem\";\nimport { fetchMinUsers } from \"../api/fetch/fetchMinimalUser.jsx\";\nimport { updateFriendStatus } from \"../api/send/updateFriendRequestStatus\";\nimport { deleteAnsweredFriendRequests } from \"../api/send/deleteFriendRequest\";\nimport { containerStyles } from \"../styles/containers\";\nimport { tableStyles } from \"../styles/table.jsx\";\nimport { imageStyles } from \"../styles/image.jsx\";\nimport { statusBarStyles } from \"../styles/statusBar.jsx\";\n\n/**\n * Welcome to the Home Screen component, where the magic happens!\n *\n * This screen showcases your food items, manages friend requests, and lets you add items with a sprinkle of fun.\n * It's like a feast for your eyes, or as Daisy the cat would say, a purr-fect experience!\n *\n * @component\n * @example\n * // Just include this in your navigation stack, and voila!\n * <HomeScreen />\n *\n * @returns {JSX.Element} - A delightful rendering of your daily food adventures.\n * @throws {CatAttackError} - In case Daisy decides to playfully interrupt the rendering.\n *\n * @param {Object} props - The Home Screen props (not as exciting as Daisy, but necessary).\n * @param {boolean} props.submissionVisible - Flag indicating the visibility of the invisible feed item form.\n * @param {Function} props.setSubmissionVisible - Function to toggle the visibility of the invisible feed item form.\n *\n * @version 1.0.0\n * @since Daisy-licious Update\n * @author Dvovivov\n */\nexport default function HomeScreen() {\n  // context\n  const globalContext = useContext(context);\n  const {\n    domain,\n    feedItems,\n    setFeedItems,\n    isLoading,\n    setIsLoading,\n    friendRequests,\n    setFriendRequests,\n    minUsers,\n    setMinUsers,\n    activeUser,\n    setActiveUser,\n    screenBackgroundImage,\n  } = globalContext;\n\n  // Submission form related flag whether is visible\n  const [submissionVisible, setSubmissionVisible] = useState(false);\n\n  // Set today's date to display\n  const todayDate = new Date().toISOString().split(\"T\")[0];\n\n  useEffect(() => {\n    fetchFeedItem(setFeedItems, setIsLoading, domain);\n    fetchMinUsers(setMinUsers, setIsLoading, domain);\n    updateFriendStatus(activeUser, setActiveUser, friendRequests, domain);\n    deleteAnsweredFriendRequests(\n      activeUser,\n      friendRequests,\n      setFriendRequests,\n      domain\n    );\n  }, [submissionVisible]);\n\n  return (\n    <ImageBackground\n      source={screenBackgroundImage}\n      style={imageStyles.backgroundImage}\n    >\n      <SafeAreaView style={containerStyles.highLevelContainers}>\n        <StatusBar\n          backgroundColor={statusBarStyles.backgroundColor}\n          barStyle={statusBarStyles.barStyle}\n        />\n        {/* Show loading screen */}\n        {isLoading ? (\n          <ActivityIndicator size=\"large\" color=\"#884400\" />\n        ) : (\n          <View style={tableStyles.table}>\n            <Table\n              foodItems={getUserFilteredFoodItems(feedItems, activeUser)}\n              setFoodItems={setFeedItems}\n              minUsers={minUsers}\n              requiredDate={todayDate}\n            />\n          </View>\n        )}\n\n        {/* Invisible feed item form */}\n        <FeedItemForm\n          isVisible={submissionVisible}\n          onClose={() => {\n            setSubmissionVisible(false);\n          }}\n          onSubmit={() => {\n            setSubmissionVisible(false);\n          }}\n        />\n\n        {/* Add item floating button */}\n        <FloatingButton\n          onPress={() => {\n            setSubmissionVisible(true);\n          }}\n        />\n        <FloatingSumView\n          data={getDateFilteredFoodItems(\n            getUserFilteredFoodItems(feedItems, activeUser),\n            todayDate\n          )}\n        />\n        <StatusBar style=\"auto\" />\n      </SafeAreaView>\n    </ImageBackground>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nexport const dropdownStyles = StyleSheet.create({\n  dropdownMain: {\n    margin: 16,\n    height: 50,\n    backgroundColor: \"white\",\n    borderRadius: 12,\n    padding: 12,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 1.41,\n    elevation: 2,\n  },\n  icon: {\n    marginRight: 5,\n  },\n  item: {\n    padding: 17,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n  },\n  textItem: {\n    flex: 1,\n    fontSize: 16,\n  },\n  placeholderStyle: {\n    fontSize: 14,\n    color: \"#aaa\",\n    alignSelf: \"center\",\n  },\n  selectedTextStyle: {\n    fontSize: 16,\n  },\n  iconStyle: {\n    marginLeft: 40,\n    width: 20,\n    height: 20,\n  },\n  inputSearchStyle: {\n    height: 40,\n    fontSize: 16,\n  },\n});\n","import React, { useState } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { Dropdown } from \"react-native-element-dropdown\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\n\nimport { dropdownStyles } from \"../styles/dropdown\";\n\nconst DropdownComponent = ({ dateData, setDateSelected }) => {\n  const [value, setValue] = useState(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const renderItem = (item) => {\n    return (\n      <View style={dropdownStyles.item}>\n        <Text style={dropdownStyles.textItem}>{item.label}</Text>\n        {item.value === value && (\n          <AntDesign\n            style={dropdownStyles.icon}\n            color=\"black\"\n            name=\"Safety\"\n            size={20}\n          />\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <Dropdown\n      style={dropdownStyles.dropdownMain}\n      placeholderStyle={dropdownStyles.placeholderStyle}\n      selectedTextStyle={dropdownStyles.selectedTextStyle}\n      inputSearchStyle={dropdownStyles.inputSearchStyle}\n      iconStyle={dropdownStyles.iconStyle}\n      data={dateData}\n      search\n      maxHeight={300}\n      labelField=\"label\"\n      valueField=\"value\"\n      placeholder={!isFocused ? \"Select a date...\" : \"...\"}\n      searchPlaceholder=\"Search...\"\n      value={value}\n      onFocus={() => setIsFocused(true)}\n      onBlur={() => setIsFocused(false)}\n      onChange={(item) => {\n        setValue(item.value);\n        setIsFocused(false);\n        setDateSelected(item.value);\n      }}\n      renderLeftIcon={() => (\n        <AntDesign\n          style={dropdownStyles.icon}\n          color={isFocused ? \"blue\" : \"black\"}\n          name=\"Safety\"\n          size={20}\n        />\n      )}\n      renderItem={renderItem}\n    />\n  );\n};\n\nexport default DropdownComponent;\n","import \"react-native-gesture-handler\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport {\n  View,\n  ActivityIndicator,\n  SafeAreaView,\n  ImageBackground,\n  StatusBar,\n} from \"react-native\";\n\nimport {\n  getDateArray,\n  getUniqueDateArray,\n  getDateDropdownData,\n  getDateFilteredFoodItems,\n  getUserFilteredFoodItems,\n} from \"../utils/Others\";\nimport DropdownComponent from \"../components/DropDown\";\nimport { FloatingSumView } from \"../components/FloatingSummation\";\nimport { Table } from \"../components/Table\";\nimport { context } from \"../context/global\";\nimport { fetchFeedItem } from \"../api/fetch/fetchFeedItem\";\nimport { fetchMinUsers } from \"../api/fetch/fetchMinimalUser.jsx\";\nimport { containerStyles } from \"../styles/containers.jsx\";\nimport { tableStyles } from \"../styles/table.jsx\";\nimport { imageStyles } from \"../styles/image.jsx\";\nimport { statusBarStyles } from \"../styles/statusBar.jsx\";\n\n/**\n * Renders the History screen component.\n *\n * @returns {JSX.Element} The rendered History screen component.\n *\n * @description\n * This component displays the history of feed items for Daisy the cat, the most sophisticated and finicky feline in the neighborhood.\n * It fetches data from the server and elegantly renders the content based on the fetched data, leaving no room for any \"cat\"-astrophes.\n * The component includes a dropdown to select a specific date, a table to display the feed items for the selected date,\n * and a floating sum view to show the total amount of food consumed on the selected date, because Daisy deserves nothing but the best.\n *\n * @example\n * // Usage\n * <HistoryScreen />\n */\n/**\n * Renders the History screen component.\n *\n * @returns {JSX.Element} The rendered History screen component.\n *\n * @description\n * This component displays the history of feed items for Daisy the cat.\n * It fetches data from the server and renders the content based on the fetched data.\n * The component includes a dropdown to select a specific date, a table to display the feed items for the selected date,\n * and a floating sum view to show the total amount of food consumed on the selected date.\n */\nexport default function HistoryScreen() {\n  // context\n  const globalContext = useContext(context);\n  const {\n    domain,\n    feedItems,\n    setFeedItems,\n    isLoading,\n    setIsLoading,\n    minUsers,\n    setMinUsers,\n    activeUser,\n    screenBackgroundImage,\n  } = globalContext;\n\n  // const [feedItems, setFeedItems] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n  const [dateSelected, setDateSelected] = useState(\"\");\n\n  const getDropdownUniqueDates = (originalData) => {\n    const dateArray = getDateArray(originalData);\n    const uniqueDataArray = getUniqueDateArray(dateArray);\n    return getDateDropdownData(uniqueDataArray);\n  };\n\n  useEffect(() => {\n    fetchMinUsers(setMinUsers, setIsLoading, domain);\n    fetchFeedItem(setFeedItems, setIsLoading, domain);\n  }, []);\n\n  return (\n    <ImageBackground\n      source={screenBackgroundImage}\n      style={imageStyles.backgroundImage}\n    >\n      <SafeAreaView style={containerStyles.highLevelContainers}>\n        <StatusBar\n          backgroundColor={statusBarStyles.backgroundColor}\n          barStyle={statusBarStyles.barStyle}\n        />\n        {isLoading ? (\n          // Display a spinner while data is loading\n          <ActivityIndicator size=\"large\" color=\"#884400\" />\n        ) : (\n          // Render content based on the fetched data\n          <View>\n            <DropdownComponent\n              dateData={getDropdownUniqueDates(\n                getUserFilteredFoodItems(feedItems, activeUser)\n              )}\n              setDateSelected={setDateSelected}\n            />\n            <View style={tableStyles.table}>\n              <Table\n                foodItems={getUserFilteredFoodItems(feedItems, activeUser)}\n                setFoodItems={setFeedItems}\n                minUsers={minUsers}\n                requiredDate={dateSelected}\n              />\n            </View>\n            <FloatingSumView\n              data={getDateFilteredFoodItems(\n                getUserFilteredFoodItems(feedItems, activeUser),\n                dateSelected\n              )}\n            />\n          </View>\n        )}\n      </SafeAreaView>\n    </ImageBackground>\n  );\n}\n","import { StyleSheet } from \"react-native\";\n\nexport const plotStyles = StyleSheet.create({\n  container: {\n    // backgroundColor: \"orange\"\n  },\n  plotCard: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    borderColor: \"#eee\",\n    borderWidth: 0,\n    borderRadius: 10,\n    margin: 15,\n  },\n  victoryAxisStyle: {\n    axis: { stroke: \"#756f6a\" },\n    ticks: { stroke: \"grey\", size: 5 },\n    tickLabels: { fontSize: 10, padding: 5 },\n    axisLabel: { padding: 30 },\n  },\n  victoryTotalLine: {\n    data: { stroke: \"#0d6623\", strokeWidth: 5 },\n    parent: { border: \"3px solid #ccc\" },\n  },\n  victoryDryLine: {\n    data: { stroke: \"#660d0d\", strokeWidth: 5 },\n    parent: { border: \"3px solid #ccc\" },\n  },\n  victoryWetLine: {\n    data: { stroke: \"#031ca7\", strokeWidth: 5 },\n    parent: { border: \"3px solid #ccc\" },\n  },\n});\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport {\n  VictoryChart,\n  VictoryAxis,\n  VictoryLine,\n  VictoryLabel,\n} from \"victory-native\";\n\nimport { plotStyles } from \"../styles/plots\";\n\nexport const TimeLinePlot = ({ data, foodType = \"none\" }) => {\n  return (\n    <View>\n      <VictoryChart width={350} height={350}>\n        <VictoryAxis\n          dependentAxis\n          tickFormat={(tick) => `${tick}`}\n          style={plotStyles.victoryAxisStyle}\n          label=\"Amount (grams)\"\n        />\n        <VictoryAxis\n          tickLabelComponent={<VictoryLabel angle={\"90\"} />}\n          tickFormat={(x) =>\n            \"   \" +\n            new Date(x).getDate() +\n            \"-\" +\n            String(Number(new Date(x).getMonth()) + 1)\n          }\n          style={plotStyles.victoryAxisStyle}\n          label=\"Date\"\n        />\n        <VictoryLine\n          data={accumulatePerDate(data, foodType)}\n          x=\"date\"\n          y=\"accumulatedAmount\"\n          style={getLineStyle(foodType)}\n        />\n      </VictoryChart>\n    </View>\n  );\n};\n\nconst filterFoodType = (data, foodType) => {\n  return data.filter((item) => item.food_choice === foodType);\n};\n\n/**\n * Function that return an array of objects, where each object has a date field, and an amount field, corresponding\n * to the feeding amount that was done that day, whether all food, dry, or wet food.\n * @param {feedItem} data Feeding data\n * @param {string} foodType Food type: 'none', 'dry', 'wet'\n * @returns\n */\nconst accumulatePerDate = (data, foodType) => {\n  const filteredData =\n    foodType === \"none\" ? data : filterFoodType(data, foodType);\n\n  // Extracting the range of dates\n  // const dates = filteredData.map((item) => item.datetime.split(\"T\")[0]);\n  const dates = data.map((item) => new Date(item.datetime).getTime());\n  const minDate = Math.min(...dates);\n  const maxDate = Math.max(...dates);\n\n  // Generating an array with all dates in the range\n  const allDatesInRange = [];\n  let currentDate = new Date(minDate);\n\n  while (currentDate <= new Date(maxDate)) {\n    allDatesInRange.push(currentDate.toISOString().split(\"T\")[0]);\n    currentDate.setDate(currentDate.getDate() + 1);\n  }\n\n  // Creating the result array with accumulated amounts, filling in missing dates with amount 0\n  const resultArray = allDatesInRange.map((date) => {\n    const matchingItems = filteredData.filter(\n      (item) => item.datetime.split(\"T\")[0] === date\n    );\n    const accumulatedAmount = matchingItems.reduce(\n      (sum, item) => sum + item.amount,\n      0\n    );\n    return { date: date, accumulatedAmount: accumulatedAmount };\n  });\n\n  return resultArray;\n};\n\nconst getLineStyle = (foodType) => {\n  switch (foodType) {\n    case \"none\":\n      return plotStyles.victoryTotalLine;\n    case \"dry\":\n      return plotStyles.victoryDryLine;\n    case \"wet\":\n      return plotStyles.victoryWetLine;\n  }\n};\n","import { StyleSheet } from \"react-native\";\n\nexport const highLevelStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  title: {\n    fontSize: 18,\n    padding: 10,\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n});\n","import React, { useEffect, useContext } from \"react\";\nimport {\n  ScrollView,\n  ActivityIndicator,\n  View,\n  Text,\n  ImageBackground,\n  StatusBar,\n} from \"react-native\";\n\nimport { TimeLinePlot } from \"../components/Plot\";\nimport { context } from \"../context/global\";\nimport { fetchFeedItem } from \"../api/fetch/fetchFeedItem\";\nimport { getUserFilteredFoodItems } from \"../utils/Others\";\nimport { highLevelStyles } from \"../styles/highLevel\";\nimport { plotStyles } from \"../styles/plots\";\nimport { imageStyles } from \"../styles/image\";\nimport { statusBarStyles } from \"../styles/statusBar\";\n\n/**\n * Renders the PlotScreen component, which displays various plots related to Daisy the cat's feeding amounts.\n *\n * @component\n * @returns {JSX.Element} The rendered PlotScreen component.\n *\n * @example\n * // Usage\n * import PlotScreen from './screens/Plots';\n *\n * function App() {\n *   return (\n *     <PlotScreen />\n *   );\n * }\n *\n * @description\n * The PlotScreen component is responsible for rendering plots that show the accumulated feeding amounts of Daisy the cat.\n * It fetches the feed items from the server and displays loading indicator until the data is loaded.\n * Once the data is loaded, it renders three PlotCard components, each showing the accumulated feeding amounts for different food types.\n *\n * @see {@link PlotCard}\n * @see {@link getUserFilteredFoodItems}\n * @see {@link fetchFeedItem}\n */\nexport default function PlotScreen() {\n  // context\n  const globalContext = useContext(context);\n  const {\n    domain,\n    feedItems,\n    setFeedItems,\n    setIsLoading,\n    isLoading,\n    activeUser,\n    screenBackgroundImage,\n  } = globalContext;\n\n  // const [feedItems, setFeedItems] = useState([]);\n  // const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchFeedItem(setFeedItems, setIsLoading, domain);\n  }, []);\n\n  return (\n    <ImageBackground\n      source={screenBackgroundImage}\n      style={imageStyles.backgroundImage}\n    >\n      <StatusBar\n        backgroundColor={statusBarStyles.backgroundColor}\n        barStyle={statusBarStyles.barStyle}\n      />\n      <ScrollView contentContainerStyle={plotStyles.container}>\n        {isLoading ? (\n          <ActivityIndicator size=\"large\" color=\"#884400\" />\n        ) : (\n          <View>\n            <PlotCard\n              data={getUserFilteredFoodItems(feedItems, activeUser)}\n              foodType=\"none\"\n              titleText=\"Accumulated Feeding Amount\"\n            />\n            <PlotCard\n              data={getUserFilteredFoodItems(feedItems, activeUser)}\n              foodType=\"dry\"\n              titleText=\"Accumulated Dry Food Amount\"\n            />\n            <PlotCard\n              data={getUserFilteredFoodItems(feedItems, activeUser)}\n              foodType=\"wet\"\n              titleText=\"Accumulated Wet Food Amount\"\n            />\n          </View>\n        )}\n      </ScrollView>\n    </ImageBackground>\n  );\n}\n\n/**\n * A component that renders a plot card for Daisy the cat's feeding data.\n *\n * @component\n * @param {Object} props - The component props.\n * @param {Array} props.data - The feeding data for the plot.\n * @param {string} props.foodType - The type of food Daisy is fed.\n * @param {string} props.titleText - The title text to display on the plot card.\n * @returns {JSX.Element} The rendered plot card component.\n */\nconst PlotCard = ({ data, foodType, titleText }) => {\n  return (\n    <View style={plotStyles.plotCard}>\n      <Text style={highLevelStyles.title}>{titleText}</Text>\n      <TimeLinePlot data={data} foodType={foodType} />\n    </View>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { View, Text, Modal, TouchableOpacity } from \"react-native\";\n\nimport { clearHistory } from \"../api/send/deleteFeedItem\";\nimport { context } from \"../context/global\";\nimport { containerStyles } from \"../styles/containers\";\nimport { buttonStyles } from \"../styles/buttons\";\nimport { modalStyles } from \"../styles/modal\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport const SettingsClearComponent = ({ foodItems, setFoodItems, style }) => {\n  // context\n  const globalContext = useContext(context);\n  const { domain } = globalContext;\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  return (\n    <View>\n      {/* Clear History Button */}\n      <View>\n        <TouchableOpacity\n          style={style}\n          onPress={() => handleClearHistory(setIsModalVisible)}\n        >\n          <View style={buttonStyles.buttonRowContainer}>\n            <Ionicons name=\"trash-bin\" style={buttonStyles.buttonIcon} />\n            <Text style={buttonStyles.buttonText}>Clear History</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n\n      {/* Confirmation Modal */}\n      <Modal\n        transparent={true}\n        visible={isModalVisible}\n        onRequestClose={() => setIsModalVisible(false)}\n      >\n        <View style={modalStyles.modalContainer}>\n          <View style={modalStyles.modalContent}>\n            <Text style={modalStyles.modalTitle}>Clear History?</Text>\n            <Text style={modalStyles.modalText}>\n              Are you sure you want to clear your history?\n            </Text>\n            <View style={containerStyles.rowButtonContainer}>\n              <TouchableOpacity\n                style={buttonStyles.okButton}\n                onPress={() =>\n                  handleConfirmation(\n                    foodItems,\n                    setFoodItems,\n                    setIsModalVisible,\n                    domain\n                  )\n                }\n              >\n                <Text style={buttonStyles.buttonText}>OK</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={buttonStyles.cancelButton}\n                onPress={() => handleCancel(setIsModalVisible)}\n              >\n                <Text style={buttonStyles.buttonText}>Cancel</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst handleClearHistory = (setIsModalVisible) => {\n  setIsModalVisible(true);\n};\n\nconst handleConfirmation = (data, setData, setIsModalVisible, domain) => {\n  clearHistory(data, setData, domain);\n\n  // After clearing history, close the modal\n  setIsModalVisible(false);\n\n  // Optionally, you can show a success message\n  // Alert.alert(\"History Cleared\", \"Your history has been cleared successfully.\");\n};\n\nconst handleCancel = (setIsModalVisible) => {\n  // If the user cancels, simply close the modal\n  setIsModalVisible(false);\n};\n","import React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\n\nimport { containerStyles } from \"../styles/containers\";\nimport { buttonStyles } from \"../styles/buttons\";\nimport { tableStyles } from \"../styles/table\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nexport const FriendRequestView = ({\n  activeUser,\n  friendRequests,\n  minUsers,\n  onAccept,\n  onReject,\n}) => {\n  const userFriendRequests = friendRequests.filter(\n    (friendRequest) =>\n      friendRequest.to_user === activeUser.id && friendRequest.pending\n  );\n\n  return (\n    <ScrollView>\n      <Text style={tableStyles.settingsTitle}>\n        {userFriendRequests.length === 0\n          ? `No pending friend requests`\n          : `Pending friend requests:`}\n      </Text>\n      <View style={containerStyles.settingsContainer}>\n        {userFriendRequests.map((friendRequest, idx) => (\n          <FriendRequestCard\n            senderInfo={minUsers.find(\n              (item) => friendRequest.from_user === item.id\n            )}\n            key={`fr-card-${idx}`}\n            onAccept={() => onAccept(friendRequest.id)}\n            onReject={() => onReject(friendRequest.id)}\n          />\n        ))}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst FriendRequestCard = ({ senderInfo, onAccept, onReject }) => {\n  return (\n    <View style={containerStyles.tableContainer}>\n      <View>\n        <Text style={tableStyles.innerText}>{senderInfo.username}</Text>\n      </View>\n      <View style={{ ...containerStyles.rowButtonContainer, width: \"60%\" }}>\n        <TouchableOpacity onPress={onAccept} style={buttonStyles.okButton}>\n          <View style={{ ...buttonStyles.buttonRowContainer, left: 0 }}>\n            <Ionicons\n              name=\"checkmark\"\n              style={{ ...buttonStyles.buttonIcon, marginRight: 0 }}\n            />\n            {/* <Text style={buttonStyles.buttonText}>Accept</Text> */}\n          </View>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={onReject} style={buttonStyles.cancelButton}>\n          <View style={{ ...buttonStyles.buttonRowContainer, left: 0 }}>\n            <Ionicons\n              name=\"close\"\n              style={{ ...buttonStyles.buttonIcon, marginRight: 0 }}\n            />\n            {/* <Text style={buttonStyles.buttonText}>Reject</Text> */}\n          </View>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n","import axios from \"axios\";\n\n/**\n * Fetches pending friend requests from the server.\n * Meow! This function fetches the pending friend requests for Daisy the cat.\n * It sets the friend requests and loading state using the provided functions.\n * The base path for the API can be optionally specified.\n *\n * @param {Function} setFriendRequests - The function to set the fetched friend requests.\n * @param {Function} setIsLoading - The function to set the loading state.\n * @param {string} [basePath=\"http://192.168.1.79/\"] - The base path for the API.\n * @returns {Promise<Error|undefined>} - An error object if there was an error fetching the friend requests, otherwise undefined.\n */\nexport const fetchPendingFriendRequests = async (\n  setFriendRequests,\n  setIsLoading,\n  basePath = \"http://192.168.1.79/\"\n) => {\n  try {\n    console.log(`Fetching pending friend requests...`);\n    const response = await axios.get(basePath + `api/friend-requests/`);\n    const pendingFriendRequests = response.data.filter((item) => item.pending);\n    setIsLoading(false);\n    setFriendRequests(pendingFriendRequests);\n    console.log(`Fetched ${pendingFriendRequests.length} friend requests`);\n  } catch (error) {\n    console.log(\"Error fetching pending friend requests.\");\n    return error;\n  }\n};\n\n/**\n * Fetches friend requests from the server.\n * This function sends a GET request to the specified API endpoint to retrieve friend requests.\n * It updates the state with the fetched friend requests and handles loading state.\n *\n * @param {Function} setFriendRequests - A function to update the state with the fetched friend requests.\n * @param {Function} setIsLoading - A function to update the loading state.\n * @param {string} basePath - The base path for the API endpoint.\n * @returns {Promise<void>} - A promise that resolves when the friend requests are fetched successfully.\n *\n * @example\n * // Fetch friend requests\n * fetchFriendRequests(setFriendRequests, setIsLoading, '/api/');\n *\n * @see Daisy the cat 🐱 - She loves making new friends!\n */\nexport const fetchFriendRequests = async (\n  setFriendRequests,\n  setIsLoading,\n  basePath\n) => {\n  try {\n    console.log(`Fetching friend requests...`);\n    const response = await axios.get(basePath + `api/friend-requests/`);\n    const allFriendRequests = response.data;\n    setIsLoading(false);\n    setFriendRequests(allFriendRequests);\n    console.log(`Fetched ${allFriendRequests.length} friend requests`);\n  } catch (error) {\n    console.log(`Error fetching friend requests, ${error}.`);\n  }\n};\n","import axios from \"axios\";\n\nexport const removeFriend = async (\n  userId,\n  activeUser,\n  setActiveUser,\n  basePath\n) => {\n  try {\n    console.log(\n      `Attempting to remove user ID ${userId} from ${activeUser.username}'s friends list...`\n    );\n    const updateFriendsList = activeUser.profile.friends.filter(\n      (item) => item !== userId\n    );\n    await axios.patch(`${basePath}api/profile/${activeUser.id}/`, {\n      friends: updateFriendsList,\n    });\n    const updatedActiveUser = {\n      ...activeUser,\n      profile: { id: activeUser.profile.id, friends: updateFriendsList },\n    };\n    setActiveUser(updatedActiveUser);\n    console.log(\n      `Removed user ID ${userId} from ${activeUser.username}'s friends list.`\n    );\n  } catch (error) {\n    console.log(`Failed to remove ID ${userId} from friends list, ${error}`);\n  }\n};\n","import { Ionicons } from \"@expo/vector-icons\";\nimport React from \"react\";\nimport { ScrollView, Text, TouchableOpacity, View } from \"react-native\";\nimport { removeFriend } from \"../api/send/removeFriend\";\nimport { containerStyles } from \"../styles/containers\";\nimport { tableStyles } from \"../styles/table\";\n\nexport const FriendListView = ({ activeUser, setActiveUser, minUsers }) => {\n  const minUsersFriends = minUsers.filter((item) =>\n    activeUser.profile.friends.includes(item.id)\n  );\n  return (\n    <ScrollView>\n      {minUsersFriends.length === 0 ? (\n        <Text style={tableStyles.settingsTitle}>No friends to display</Text>\n      ) : (\n        <Text style={tableStyles.settingsTitle}>Friend List:</Text>\n      )}\n      <View style={containerStyles.settingsContainer}>\n        {minUsersFriends.map((minUserFriend, idx) => (\n          <FriendCard\n            key={`f-card-${idx}`}\n            friendId={minUserFriend.id}\n            activeUser={activeUser}\n            setActiveUser={setActiveUser}\n            minUser={minUserFriend}\n          />\n        ))}\n      </View>\n    </ScrollView>\n  );\n};\n\nexport const FriendCard = ({\n  friendId,\n  activeUser,\n  setActiveUser,\n  minUser,\n}) => {\n  const onDelete = () => {\n    removeFriend(friendId, activeUser, setActiveUser);\n    console.log(`Deleting friend username: ${minUser.username}`);\n  };\n  return (\n    <View style={{ ...containerStyles.tableContainer, width: 300 }}>\n      <View>\n        <Text style={tableStyles.innerText}>{minUser.username}</Text>\n      </View>\n      <TouchableOpacity onPress={onDelete}>\n        <Ionicons name=\"trash\" color={\"black\"} size={30} />\n      </TouchableOpacity>\n    </View>\n  );\n};\n","import axios from \"axios\";\n\nexport const sendFriendRequest = async (data, basePath) => {\n  try {\n    console.log(\n      `Sending friend request from ID ${data.from_user} to ID ${data.to_user}...`\n    );\n    await axios.post(basePath + `api/friend-requests/`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    console.log(`Sent friend request.`);\n  } catch (error) {\n    console.log(`Could not send friend request.`);\n  }\n};\n","import React, { useState } from \"react\";\nimport { View, Text, Modal, TouchableOpacity } from \"react-native\";\nimport { sendFriendRequest } from \"../api/send/sendFriendRequest\";\nimport { Dropdown } from \"react-native-element-dropdown\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\";\n\nimport { dropdownStyles } from \"../styles/dropdown\";\nimport { modalStyles } from \"../styles/modal\";\nimport { buttonStyles } from \"../styles/buttons\";\n\n/**\n * Send friend request popup, contains a dropdown of all available users, submit and cancel buttons\n * @param {*} props isVisible, onSubmit, onClose, minUsers, activeUser, domain\n * @returns SendFriendRequestPopup\n */\nexport const SendFriendRequestPopup = ({\n  isVisible,\n  onSubmit,\n  onClose,\n  minUsers,\n  activeUser,\n  domain,\n}) => {\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Additional\n  const [value, setValue] = useState(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const allAvailableUsernames = minUsers.map((item) => {\n    return {\n      id: item.id,\n      name: item.username,\n    };\n  }); // Replace with your actual list of usernames\n  const availableUsernames = allAvailableUsernames.filter(\n    (item) =>\n      item.id !== activeUser.id && !activeUser.profile.friends.includes(item.id)\n  );\n  const dropdownAvailableUsernames = availableUsernames.map((item) => {\n    return {\n      label: item.name,\n      value: item.name,\n    };\n  });\n\n  const handleSendRequest = () => {\n    if (selectedUser === null) {\n      alert(\"Please select a user to send a friend request to\");\n    } else {\n      try {\n        const data = {\n          to_user: selectedUser.id,\n          from_user: activeUser.id,\n          approved: false,\n          pending: true,\n        };\n        console.log(`Sending friend request to ${selectedUser.username}`);\n        sendFriendRequest(data, domain);\n        alert(`Sent friend request to ${selectedUser.username}`);\n      } catch (error) {\n        alert(\"Error sending friend request\");\n        console.log(error);\n      }\n    }\n  };\n\n  const renderItem = (item) => {\n    return (\n      <View style={dropdownStyles.item}>\n        <Text style={dropdownStyles.textItem}>{item.label}</Text>\n        {item.value === value && (\n          <AntDesign\n            style={dropdownStyles.icon}\n            color=\"black\"\n            name=\"Safety\"\n            size={20}\n          />\n        )}\n      </View>\n    );\n  };\n\n  const handleSelectUser = (item) => {\n    const selectedMinUser = minUsers.find(\n      (user) => user.username === item.value\n    );\n    setSelectedUser(selectedMinUser);\n    console.log(`Selected user: ${selectedMinUser.username}`);\n  };\n\n  return (\n    <Modal transparent={true} visible={isVisible}>\n      <View style={modalStyles.modalContainer}>\n        <View style={modalStyles.modalContent}>\n          <Text style={modalStyles.modalTitle}>Send Friend Request</Text>\n          <Dropdown\n            style={dropdownStyles.dropdownMain}\n            placeholderStyle={dropdownStyles.placeholderStyle}\n            selectedTextStyle={dropdownStyles.selectedTextStyle}\n            inputSearchStyle={dropdownStyles.inputSearchStyle}\n            iconStyle={dropdownStyles.iconStyle}\n            data={dropdownAvailableUsernames}\n            search\n            maxHeight={300}\n            labelField=\"label\"\n            valueField=\"value\"\n            placeholder={!isFocused ? \"Select a friend...\" : \"...\"}\n            searchPlaceholder=\"Search for a friend\"\n            value={value}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            onChange={(item) => {\n              setValue(item.value);\n              setIsFocused(false);\n              handleSelectUser(item);\n            }}\n            renderLeftIcon={() => (\n              <AntDesign\n                style={dropdownStyles.icon}\n                color={isFocused ? \"blue\" : \"black\"}\n                name=\"Safety\"\n                size={20}\n              />\n            )}\n            renderItem={renderItem}\n          />\n          <TouchableOpacity\n            style={buttonStyles.standardButton}\n            onPress={() => {\n              onSubmit();\n              handleSendRequest();\n            }}\n          >\n            <View style={buttonStyles.buttonRowContainer}>\n              <Ionicons name=\"checkmark\" style={buttonStyles.buttonIcon} />\n              <Text style={buttonStyles.buttonText}>Send Request</Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={buttonStyles.standardButton}\n            onPress={onClose}\n          >\n            <View style={buttonStyles.buttonRowContainer}>\n              <Ionicons name=\"close\" style={buttonStyles.buttonIcon} />\n              <Text style={buttonStyles.buttonText}>Close</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  SafeAreaView,\n  View,\n  Text,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\n\nimport { SettingsClearComponent } from \"../components/SettingsClear\";\nimport { ActivityIndicator } from \"react-native\";\nimport { context } from \"../context/global\";\nimport { fetchFeedItem } from \"../api/fetch/fetchFeedItem\";\nimport { FriendRequestView } from \"../components/OpenFriendRequestWindow\";\nimport { fetchMinUsers } from \"../api/fetch/fetchMinimalUser.jsx\";\nimport { fetchFriendRequests } from \"../api/fetch/fetchFriendRequests\";\nimport { getUserFilteredFoodItems } from \"../utils/Others\";\nimport {\n  updateFriendRequestStatus,\n  updateFriendStatus,\n} from \"../api/send/updateFriendRequestStatus\";\nimport { FriendListView } from \"../components/FriendsList\";\nimport { SendFriendRequestPopup } from \"../components/CreateFriendRequestPopup\";\nimport { containerStyles } from \"../styles/containers.jsx\";\nimport { buttonStyles } from \"../styles/buttons.jsx\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { imageStyles } from \"../styles/image.jsx\";\nimport { StatusBar } from \"react-native\";\nimport { statusBarStyles } from \"../styles/statusBar.jsx\";\n\n/**\n * Daisy's Settings Screen.\n * This screen allows users to manage their settings and interact with friends.\n *\n * @component\n * @example\n * // Usage\n * import SettingsScreen from './screens/Settings';\n *\n * function App() {\n *   return (\n *     <SettingsScreen />\n *   );\n * }\n *\n * @returns {JSX.Element} The rendered Settings screen.\n *\n * @fires SettingsScreen#onFriendRequestAccept\n * @fires SettingsScreen#onFriendRequestReject\n *\n */\nexport default function SettingsScreen() {\n  const [createRequestVisible, setCreateRequestVisible] = useState(false);\n\n  // context\n  const globalContext = useContext(context);\n  const {\n    domain,\n    isLoading,\n    feedItems,\n    setFeedItems,\n    setIsLoading,\n    minUsers,\n    setMinUsers,\n    activeUser,\n    setActiveUser,\n    friendRequests,\n    setFriendRequests,\n    screenBackgroundImage,\n  } = globalContext;\n\n  // Handle friend request window\n  const handleOpenPopup = () => {\n    setCreateRequestVisible(true);\n  };\n\n  const handleClosePopup = () => {\n    setCreateRequestVisible(false);\n  };\n\n  // Handle status gathering\n  useEffect(() => {\n    fetchFeedItem(setFeedItems, setIsLoading, domain);\n    fetchMinUsers(setMinUsers, setIsLoading, domain);\n  }, []);\n\n  useEffect(() => {\n    updateFriendStatus(activeUser, setActiveUser, friendRequests, domain);\n    fetchFriendRequests(setFriendRequests, setIsLoading, domain);\n  }, []);\n\n  const onFriendRequestAccept = (friendRequestId) => {\n    updateFriendRequestStatus(\n      friendRequestId,\n      friendRequests,\n      setFriendRequests,\n      activeUser,\n      setActiveUser,\n      true,\n      domain\n    );\n  };\n  const onFriendRequestReject = (friendRequestId) => {\n    updateFriendRequestStatus(\n      friendRequestId,\n      friendRequests,\n      setFriendRequests,\n      activeUser,\n      setActiveUser,\n      false,\n      domain\n    );\n  };\n\n  return (\n    <ImageBackground\n      source={screenBackgroundImage}\n      style={imageStyles.backgroundImage}\n    >\n      <StatusBar\n        backgroundColor={statusBarStyles.backgroundColor}\n        barStyle={statusBarStyles.barStyle}\n      />\n      <SafeAreaView style={containerStyles.highLevelContainers}>\n        {isLoading ? (\n          <ActivityIndicator size=\"large\" color=\"#884400\" />\n        ) : (\n          <View>\n            <SettingsClearComponent\n              foodItems={getUserFilteredFoodItems(feedItems, activeUser)}\n              setFoodItems={setFeedItems}\n              style={buttonStyles.standardButton}\n            />\n            <TouchableOpacity\n              onPress={handleOpenPopup}\n              style={buttonStyles.standardButton}\n            >\n              <View style={buttonStyles.buttonRowContainer}>\n                <Ionicons name=\"person-add\" style={buttonStyles.buttonIcon} />\n                <Text style={buttonStyles.buttonText}>\n                  Create Friend Request\n                </Text>\n              </View>\n            </TouchableOpacity>\n            <SendFriendRequestPopup\n              isVisible={createRequestVisible}\n              onClose={handleClosePopup}\n              onSubmit={() => {}}\n              minUsers={minUsers}\n              activeUser={activeUser}\n              domain={domain}\n            />\n            <FriendListView\n              activeUser={activeUser}\n              setActiveUser={setActiveUser}\n              minUsers={minUsers}\n            />\n            <FriendRequestView\n              activeUser={activeUser}\n              minUsers={minUsers}\n              friendRequests={friendRequests}\n              onAccept={onFriendRequestAccept}\n              onReject={onFriendRequestReject}\n            />\n          </View>\n        )}\n      </SafeAreaView>\n    </ImageBackground>\n  );\n}\n","import axios from \"axios\";\n\nimport { putData } from \"./fetchFromSecureStorage\";\n\nexport const fetchLoginUser = async (\n  usernameQuery,\n  passwordQuery,\n  setError,\n  basePath\n) => {\n  try {\n    console.log(`User ${usernameQuery} is attempting to log in`);\n    const response = await axios.post(basePath + \"api/login/\", {\n      username: usernameQuery,\n      password: passwordQuery,\n    });\n\n    // Storing the token in async storage\n    await putData(`token`, response.data.token);\n    console.log(`User ${usernameQuery} has a token`);\n    return response.data; // Explicitly return the response data\n  } catch (error) {\n    setError(\n      `User ${usernameQuery} failed to log in, either the user doesn't exist or the password is incorrect`\n    );\n    console.log(`User ${usernameQuery} failed to log in, ${error}`);\n  }\n};\n","import axios from \"axios\";\n\nexport const validateToken = async (token, setError, basePath) => {\n  try {\n    console.log(`Trying to validate token...`);\n    const response = await axios.get(basePath + \"api/get-user/\", {\n      headers: { Authorization: `Token ${token}` },\n    });\n    console.log(`User ${response.data.username} authenticated the token.`);\n    return response.data;\n  } catch (error) {\n    setError(`Failed to authenticate the token`);\n    console.log(`Failed to authenticate the token, ${error}`);\n  }\n};\n","import { StyleSheet } from \"react-native\";\n\nexport const checkboxStyles = StyleSheet.create({\n  checkbox: {\n    alignSelf: \"center\",\n  },\n  checkboxLabel: {\n    color: \"white\",\n    marginLeft: 8,\n  },\n  checkboxContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 15,\n  },\n});\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ImageBackground,\n  ActivityIndicator,\n} from \"react-native\";\nimport CheckBox from \"expo-checkbox\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nimport { context } from \"../context/global\";\nimport { fetchLoginUser } from \"../api/fetch/fetchLoginUser\";\nimport { validateToken } from \"../api/fetch/validateToken\";\nimport { containerStyles } from \"../styles/containers\";\nimport { textInputStyles } from \"../styles/inputs\";\nimport { checkboxStyles } from \"../styles/checkbox\";\nimport { buttonStyles } from \"../styles/buttons\";\nimport { imageStyles } from \"../styles/image\";\nimport { StatusBar } from \"react-native\";\nimport { statusBarStyles } from \"../styles/statusBar\";\nimport {\n  putData,\n  removeData,\n  retrieveData,\n} from \"../api/fetch/fetchFromSecureStorage\";\n\n/**\n * Welcome to the Landing Screen – the gateway to foodie wonders and culinary adventures!\n *\n * This screen offers a cozy login experience, complete with a password eye and a chance to remember your foodie identity.\n * It's like a secret door to a realm of delicious delights, guarded by a password and a checkbox, Daisy-approved!\n *\n * @component\n * @example\n * // Just include this in your navigation stack, and start your foodie journey!\n * <LandingScreen navigation={navigation} />\n *\n * @param {Object} props - The Landing Screen props (because even screens have props, right?).\n * @param {Object} props.navigation - Navigation prop to help you navigate the culinary universe.\n *\n * @returns {JSX.Element} - A tasteful rendering of the login and sign-up experience.\n * @throws {CulinaryConfusionError} - In case the user can't decide between logging in or signing up.\n *\n * @version 1.0.0\n * @since Foodie-Odyssey Update\n * @author Dvovivov\n */\nconst LandingScreen = ({ navigation }) => {\n  // context\n  const globalContext = useContext(context);\n  const { domain, setActiveUser, landingBackgroundImage } = globalContext;\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  const [loginError, setLoginError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [securePassword, setSecurePassword] = useState(true);\n\n  // Logging in automatically if the user has selected to do so\n  useEffect(() => {\n    const autoLogging = async () => {\n      const token = await retrieveData(\"token\");\n      if (token) {\n        const user = await validateToken(token, setLoginError, domain);\n        setActiveUser(user);\n        navigation.navigate(\"Home\");\n      }\n    };\n    autoLogging();\n    return () => {};\n  }, []);\n\n  /**\n   * Handles the login process.\n   * @returns {Promise} - A promise that resolves to the user object if the login is successful, and undefined otherwise.\n   */\n  const handleLogin = async () => {\n    // Implement your login logic here\n    try {\n      setIsLoading(true);\n      console.log(domain);\n      console.log(domain);\n      console.log(domain);\n      const response = await fetchLoginUser(\n        username,\n        password,\n        setLoginError,\n        domain\n      );\n\n      if (typeof response === \"undefined\") {\n        setIsLoading(false);\n        return;\n      }\n\n      const user = await validateToken(response.token, setLoginError, domain);\n      setActiveUser(user);\n\n      if (typeof user !== \"undefined\") {\n        if (rememberMe) {\n          await putData(\"token\", response.token);\n          console.log(`Stored token of ${username} in SecureStore`);\n        } else {\n          await removeData(\"token\");\n          console.log(`Removed token of ${username} from SecureStore`);\n        }\n        setLoginError(\"\");\n        setIsLoading(false);\n\n        navigation.navigate(\"Home\");\n      }\n    } catch (error) {\n      console.error(error);\n      setIsLoading(false);\n      return error;\n    }\n  };\n\n  // Show password eye handler\n  const toggleShowPassword = () => {\n    setSecurePassword(!securePassword);\n  };\n\n  const handleSignUp = () => {\n    // Implement your sign-up logic here\n    console.log(\"Signing up...\");\n    navigation.navigate(\"Sign Up\");\n  };\n\n  return (\n    <ImageBackground\n      source={landingBackgroundImage}\n      style={imageStyles.backgroundImage}\n    >\n      <StatusBar\n        backgroundColor={statusBarStyles.backgroundColor}\n        barStyle={statusBarStyles.barStyle}\n      />\n      <View style={containerStyles.highLevelContainers}>\n        <View style={containerStyles.formContainer}>\n          {loginError ? (\n            <Text style={textInputStyles.loginErrorText}>{loginError}</Text>\n          ) : (\n            <></>\n          )}\n          <Text style={textInputStyles.label}>Username</Text>\n          <TextInput\n            style={textInputStyles.textInputLarge}\n            autoCompleteType=\"name\"\n            textContentType=\"username\"\n            placeholder=\"Enter your username\"\n            value={username ? username : \"\"}\n            onChangeText={setUsername}\n          />\n\n          {/* Password input with an eye */}\n\n          <Text style={textInputStyles.label}>Password</Text>\n          <View style={containerStyles.inputContainer}>\n            <TextInput\n              style={textInputStyles.textInputLarge}\n              autoCompleteType=\"password\"\n              textContentType=\"password\"\n              placeholder=\"Enter your password\"\n              secureTextEntry={securePassword}\n              value={password ? password : \"\"}\n              onChangeText={setPassword}\n            />\n            <TouchableOpacity\n              style={textInputStyles.eyeIcon}\n              onPress={toggleShowPassword}\n            >\n              <MaterialCommunityIcons\n                name={securePassword ? \"eye-outline\" : \"eye-off-outline\"}\n                size={24}\n                color=\"gray\"\n              />\n            </TouchableOpacity>\n          </View>\n\n          <View style={checkboxStyles.checkboxContainer}>\n            <CheckBox\n              value={rememberMe}\n              onValueChange={setRememberMe}\n              style={checkboxStyles.checkbox}\n            />\n            <Text style={checkboxStyles.checkboxLabel}>Remember me</Text>\n          </View>\n\n          <TouchableOpacity\n            style={buttonStyles.standardButton}\n            onPress={handleLogin}\n          >\n            <Text style={buttonStyles.buttonText}>\n              {isLoading ? (\n                <ActivityIndicator size=\"small\" color=\"#ffffff\" />\n              ) : (\n                \"Log in\"\n              )}\n            </Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={buttonStyles.backButton}\n            onPress={handleSignUp}\n          >\n            <Text style={buttonStyles.buttonText}>Sign Up</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ImageBackground>\n  );\n};\n\nexport default LandingScreen;\n","import axios from \"axios\";\n\n/**\n * Creates a user in the database for Daisy the magnificent\n * @param {*} data Data to send to the API\n * @param {*} setMinUsers Function to set the minimal users\n * @param {*} basePath Base path for the API\n */\nexport const createUser = async (data, setMinUsers, basePath) => {\n  try {\n    console.log(\n      `Creating user ${data.username} in ${basePath + \"api/signup/\"}...`\n    );\n    await axios.post(basePath + \"api/signup/\", data);\n    console.log(`Fetching minimal users...`);\n    const minUsers = await axios.get(basePath + \"api/minimal-user/\");\n    setMinUsers(minUsers.data);\n    console.log(`Created user ${data.username}, fetched minimal users.`);\n  } catch (error) {\n    console.log(`Error in creating user: ${error}`);\n  }\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\n\nimport { context } from \"../context/global\";\nimport { createUser } from \"../api/send/createUser\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { emailIsValidated } from \"../utils/Others\";\nimport { containerStyles } from \"../styles/containers\";\nimport { textInputStyles } from \"../styles/inputs\";\nimport { buttonStyles } from \"../styles/buttons\";\nimport { imageStyles } from \"../styles/image\";\nimport { StatusBar } from \"react-native\";\nimport { statusBarStyles } from \"../styles/statusBar\";\n\n/**\n * Daisy's Sign Up Screen.\n *\n * This screen allows users to sign up for Daisy's app. Users can enter their username, email, password, and confirm password.\n * If all fields are filled, a valid email is entered, and the passwords match, the user is created and a success message is displayed.\n * Otherwise, appropriate error messages are shown.\n *\n * Daisy, the clever and curious cat, welcomes you to her app and hopes you enjoy your experience!\n *\n * @component\n * @param {object} navigation - The navigation object provided by React Navigation.\n * @returns {JSX.Element} - The Sign Up screen component.\n */\nconst SignUpScreen = ({ navigation }) => {\n  // context\n  const globalContext = useContext(context);\n  const { domain, setMinUsers, landingBackgroundImage } = globalContext;\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n  const [securePassword, setSecurePassword] = useState(true);\n  const [confirmSecurePassword, setConfirmSecurePassword] = useState(true);\n\n  // Show password eye handler\n  const toggleShowPassword = () => {\n    setSecurePassword(!securePassword);\n  };\n\n  // Show password eye handler\n  const toggleShowConfirmPassword = () => {\n    setConfirmSecurePassword(!confirmSecurePassword);\n  };\n\n  const handleSignUp = () => {\n    if (\n      username === \"\" ||\n      email === \"\" ||\n      password === \"\" ||\n      confirmPassword === \"\"\n    ) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    if (!emailIsValidated(email)) {\n      alert(\"Please enter a valid email address\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n\n    const newUser = {\n      username: username,\n      email: email,\n      password: password,\n      profile: { friends: [] },\n    };\n    createUser(newUser, setMinUsers, domain);\n    alert(`Username ${username} was created!`);\n    navigation.navigate(\"Landing\");\n  };\n\n  const handleBackToLogin = () => {\n    // Navigate back to the login screen\n    navigation.navigate(\"Landing\");\n  };\n\n  return (\n    <ImageBackground\n      source={landingBackgroundImage}\n      style={imageStyles.backgroundImage}\n    >\n      <StatusBar\n        backgroundColor={statusBarStyles.backgroundColor}\n        barStyle={statusBarStyles.barStyle}\n      />\n      <View style={containerStyles.highLevelContainers}>\n        <View style={containerStyles.formContainer}>\n          <Text style={textInputStyles.label}>Username</Text>\n          <TextInput\n            value={username}\n            style={textInputStyles.textInputLarge}\n            autoCompleteType=\"username\"\n            textContentType=\"username\"\n            placeholder=\"Choose a username\"\n            autoCapitalize=\"none\"\n            onChangeText={setUsername}\n          />\n\n          <Text style={textInputStyles.label}>Email</Text>\n          <TextInput\n            value={email}\n            style={textInputStyles.textInputLarge}\n            autoCompleteType=\"email\"\n            textContentType=\"emailAddress\"\n            placeholder=\"Enter your email\"\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            onChangeText={setEmail}\n          />\n\n          <Text style={textInputStyles.label}>Password</Text>\n          <View style={containerStyles.inputContainer}>\n            <TextInput\n              value={password}\n              style={textInputStyles.textInputLarge}\n              autoCompleteType=\"password\"\n              textContentType=\"password\"\n              placeholder=\"Enter your password\"\n              secureTextEntry={securePassword}\n              onChangeText={setPassword}\n            />\n            <TouchableOpacity\n              style={textInputStyles.eyeIcon}\n              onPress={toggleShowPassword}\n            >\n              <MaterialCommunityIcons\n                name={securePassword ? \"eye-outline\" : \"eye-off-outline\"}\n                size={24}\n                color=\"gray\"\n              />\n            </TouchableOpacity>\n          </View>\n\n          <Text style={textInputStyles.label}>Confirm Password</Text>\n          <View style={textInputStyles.inputContainer}>\n            <TextInput\n              value={confirmPassword}\n              style={textInputStyles.textInputLarge}\n              autoCompleteType=\"password\"\n              textContentType=\"password\"\n              placeholder=\"Confirm your password\"\n              secureTextEntry={confirmSecurePassword}\n              onChangeText={setConfirmPassword}\n            />\n            <TouchableOpacity\n              style={textInputStyles.eyeIcon}\n              onPress={toggleShowConfirmPassword}\n            >\n              <MaterialCommunityIcons\n                name={confirmSecurePassword ? \"eye-outline\" : \"eye-off-outline\"}\n                size={24}\n                color=\"gray\"\n              />\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity\n            style={buttonStyles.standardButton}\n            onPress={handleSignUp}\n          >\n            <Text style={buttonStyles.buttonText}>Sign Up</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity\n            style={buttonStyles.backButton}\n            onPress={handleBackToLogin}\n          >\n            <Text style={buttonStyles.buttonText}>Back</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </ImageBackground>\n  );\n};\n\nexport default SignUpScreen;\n","import React, { useContext } from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { CustomDrawerContent } from \"../components/CustomDrawer\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport HomeScreen from \"../screens/Home\";\nimport HistoryScreen from \"../screens/History\";\nimport PlotScreen from \"../screens/Plots\";\nimport SettingsScreen from \"../screens/Settings\";\nimport LandingScreen from \"../screens/Landing\";\nimport SignUpScreen from \"../screens/SignUp\";\nimport { context } from \"../context/global\";\nimport { drawerStyles } from \"../styles/drawer\";\nimport { removeData } from \"../api/fetch/fetchFromSecureStorage\";\n\nconst Drawer = createDrawerNavigator();\nconst stack = createStackNavigator();\n\nconst drawerProps = {\n  drawerActiveBackgroundColor: drawerStyles.itemFocused.backgroundColor,\n  drawerActiveTintColor: drawerStyles.itemFocused.color,\n  drawerInactiveTintColor: drawerStyles.itemNotFocused.color,\n};\nconst headerStyle = {\n  headerStyle: { backgroundColor: drawerStyles.itemFocused.backgroundColor },\n  headerTitleStyle: { color: drawerStyles.itemFocused.color },\n  headerTintColor: drawerStyles.itemFocused.color,\n};\n\n/**\n * DrawerNavigator is the side drawer navigation component.\n * It provides access to various screens like Today's Feeding, History, Plots, and Settings.\n * Users can also log out gracefully, leaving Daisy the cat in charge for a while. 🐱\n *\n * @component\n * @param {object} props - The component props.\n * @param {object} props.navigation - The navigation object to facilitate screen transitions.\n * @returns {React.Component} The Drawer Navigator component.\n */\nexport function DrawerNavigator({ navigation }) {\n  // load context\n  const globalContext = useContext(context);\n  const { activeUser } = globalContext;\n\n  // Asynchronous function to remove token from SecureStorage after logging out\n  const handleLogout = async () => {\n    try {\n      console.log(\"Logging out\");\n      await removeData(\"token\");\n    } catch (error) {\n      console.error(`Cannot remove token from SecureStorage: ${error}`);\n      return error;\n    }\n    navigation.navigate(\"Landing\");\n  };\n\n  return (\n    <Drawer.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={headerStyle}\n      drawerContent={(props) => {\n        return (\n          <CustomDrawerContent\n            {...props}\n            style={drawerStyles.drawerHeaderText}\n          />\n        );\n      }}\n    >\n      {activeUser ? (\n        <>\n          <Drawer.Screen\n            name=\"Today's Feeding\"\n            component={HomeScreen}\n            options={{\n              drawerIcon: () => (\n                <Ionicons name=\"home\" style={drawerStyles.iconFocused} />\n              ),\n              ...drawerProps,\n            }}\n          />\n          <Drawer.Screen\n            name=\"History\"\n            component={HistoryScreen}\n            options={{\n              drawerIcon: () => (\n                <Ionicons name=\"book\" style={drawerStyles.iconFocused} />\n              ),\n              ...drawerProps,\n            }}\n          />\n          <Drawer.Screen\n            name=\"Plots\"\n            component={PlotScreen}\n            options={{\n              drawerIcon: () => (\n                <Ionicons name=\"stats-chart\" style={drawerStyles.iconFocused} />\n              ),\n              ...drawerProps,\n            }}\n          />\n          <Drawer.Screen\n            name=\"Settings\"\n            component={SettingsScreen}\n            options={{\n              drawerIcon: () => (\n                <Ionicons name=\"settings\" style={drawerStyles.iconFocused} />\n              ),\n              ...drawerProps,\n            }}\n          />\n          <Drawer.Screen\n            name=\"Log Out\"\n            component={StackNavigator}\n            options={{\n              drawerIcon: () => (\n                <Ionicons name=\"log-out\" style={drawerStyles.iconFocused} />\n              ),\n              ...drawerProps,\n            }}\n            listeners={{\n              drawerItemPress: (e) => {\n                e.preventDefault();\n                handleLogout();\n              },\n            }}\n          ></Drawer.Screen>\n        </>\n      ) : (\n        <>\n          <stack.Screen\n            name=\"Landing\"\n            component={LandingScreen}\n            options={{ headerShown: false }}\n          />\n        </>\n      )}\n    </Drawer.Navigator>\n  );\n}\n\n/**\n * StackNavigator is the stack-based navigation component.\n * It handles the transition between the Landing screen, Sign Up screen, and the Drawer Navigator.\n * Daisy the cat might secretly navigate through these screens when nobody's watching. 🕵️‍♀️\n *\n * @component\n * @returns {React.Component} The Stack Navigator component.\n */\nexport function StackNavigator() {\n  return (\n    <stack.Navigator initialRouteName=\"Landing\" screenOptions={headerStyle}>\n      <stack.Screen\n        name=\"Landing\"\n        component={LandingScreen}\n        options={{ headerShown: false }}\n      />\n      <stack.Screen\n        name=\"Sign Up\"\n        component={SignUpScreen}\n        options={{ headerShown: false }}\n      />\n\n      <stack.Screen\n        name=\"Home\"\n        component={DrawerNavigator}\n        options={{ headerShown: false }}\n      />\n    </stack.Navigator>\n  );\n}\n","import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\n\nimport { Provider } from \"./context/global\";\nimport { StackNavigator } from \"./navigation/navigators\";\nimport { highLevelStyles } from \"./styles/highLevel\";\nimport { statusBarStyles } from \"./styles/statusBar\";\nimport { StatusBar } from \"react-native\";\n\n// const Drawer = createDrawerNavigator();\n\n/**\n * Welcome to the Daisy Cat App - the purr-fect companion for Daisy, the most sophisticated feline in town!\n *\n * This app is not just your ordinary feline-friendly application; it's designed to cater to Daisy's every whim,\n * from tracking her daily feeding routine to providing historical insights into her culinary adventures.\n *\n * Features:\n * --------\n * - **Today's Feeding:** Keep track of Daisy's daily meals. Is it fish or chicken today? The app knows!\n * - **History:** Dive into the rich history of Daisy's gastronomic experiences. It's a cat's culinary diary!\n * - **Plots:** Discover visually stunning plots that showcase Daisy's eating patterns. Who knew data could be this cute?\n * - **Settings:** Tailor the app to Daisy's preferences. Maybe she prefers a darker theme? The choice is hers!\n *\n * And don't forget the custom drawer, specially designed with Daisy in mind. It's not just an app; it's a lifestyle,\n * a digital playground for Daisy to explore her culinary curiosities.\n *\n * So, buckle up for a whimsical journey through Daisy's world. Paws and whiskers, this app is the cat's meow!\n *\n * @component\n */\nexport default function App() {\n  return (\n    <Provider>\n      <NavigationContainer style={highLevelStyles.container}>\n        <StatusBar\n          backgroundColor={statusBarStyles.backgroundColor}\n          barStyle={statusBarStyles.barStyle}\n        />\n        <StackNavigator />\n      </NavigationContainer>\n    </Provider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/daisy_feeder_web/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [265], () => (__webpack_require__(96953)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["context","createContext","Provider","_ref","children","landingBackgroundImage","require","screenBackgroundImage","drawerBackgroundImage","_useState","useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","errorMsg","setErrorMsg","_useState5","_useState6","activeUser","setActiveUser","_useState7","_useState8","minUsers","setMinUsers","_useState9","_useState10","friendRequests","setFriendRequests","_useState11","_useState12","domain","setDomain","_useState13","_useState14","feedItems","setFeedItems","_useState15","_useState16","globalContext","isLoading","setIsLoading","_jsx","value","drawerStyles","StyleSheet","create","drawerHeader","flexDirection","alignItems","padding","drawerHeaderText","fontSize","color","fontWeight","drawerContentContainer","flex","paddingTop","logo","width","height","borderRadius","marginRight","marginLeft","imageHex","iconFocused","iconNotFocused","itemFocused","backgroundColor","itemNotFocused","imageStyles","backgroundImage","resizeMode","justifyContent","CustomDrawerHeader","_jsxs","View","style","Image","source","Text","CustomDrawerContent","props","useContext","ImageBackground","DrawerContentScrollView","_objectSpread","DrawerItemList","getDateFilteredFoodItems","foodItems","requiredDate","filter","item","Date","datetime","toISOString","split","getUsernameById","id","selectedUser","find","username","getUserFilteredFoodItems","sendingIds","concat","_toConsumableArray","profile","friends","includes","feeder","deleteFeedItem","_asyncToGenerator","data","setData","basePath","console","log","axios","delete","String","error","_x","_x2","_x3","_x4","apply","arguments","clearHistory","_ref2","data2delete","setData2delete","exceptDate","length","undefined","todayDate","filteredData","idx","_x5","_x6","tableStyles","table","marginTop","marginBottom","borderColor","borderWidth","innerText","textAlign","amount_wet","amount_dry","leftColumn","rightColumn","settingsTitle","containerStyles","highLevelContainers","inputContainer","formContainer","tableContainer","paddingHorizontal","paddingVertical","margin","settingsContainer","rowButtonContainer","Table","setFoodItems","filteredFoodItems","ScrollView","map","foodItem","toLocaleTimeString","food_choice","amount","TouchableOpacity","alignContent","onPress","Ionicons","name","size","sendFeedItem","post","modalStyles","modalContainer","modalContent","elevation","modalTitle","modalText","modalContainerInner","modalContentInner","textInputStyles","textInput","eyeIcon","position","right","top","borderLeftWidth","paddingLeft","label","textInputLarge","loginErrorText","buttonStyles","standardButton","verticalAlign","buttonText","okButton","cancelButton","backButton","floatingAddButton","bottom","addButtonText","timeButton","paddingBottom","buttonRowContainer","left","buttonIcon","FeedItemForm","isVisible","onClose","onSubmit","setAmount","foodType","setFoodType","feedingTime","setFeedingTime","showDatePicker","setShowDatePicker","Modal","transparent","visible","onRequestClose","TextInput","placeholder","keyboardType","onChangeText","text","Picker","selectedValue","onValueChange","itemValue","Item","DateTimePicker","mode","is24Hour","display","onChange","event","selectedDate","Platform","OS","feedingData","parseInt","handleSubmit","summationStyles","floatingView","auxText","wetText","dryText","FloatingSumView","WetSum","DrySum","extractAmountIntoArray","_ref3","filteredByFoodType","dataItem","summedAmount","FloatingButton","fetchFeedItem","response","get","fetchMinUsers","userId","retrieveDataMobile","key","storedAuthToken","SecureStore","getItemAsync","retrieveDataWeb","AsyncStorage","getItem","putDataMobile","setItemAsync","putDataWeb","_ref4","setItem","removeDataMobile","_ref5","deleteItemAsync","_x7","removeDataWeb","_ref6","removeItem","_x8","retrieveData","_ref7","_x9","putData","_ref8","_x10","_x11","removeData","_ref9","_x12","updateFriendStatus","activeUserFriends","potentialFriends","pending","flatMap","to_user","from_user","combinedFriendsArray","Array","from","Set","patch","updateFriendRequestStatus","requestId","approved","headers","Authorization","updatedFriendRequests","updatedFriendRequest","deleteFriendRequest","friendRequestId","deleteAnsweredFriendRequests","answeredFriendRequests","numAnsweredFriendRequests","statusBarStyles","barStyle","HomeScreen","submissionVisible","setSubmissionVisible","useEffect","SafeAreaView","StatusBar","ActivityIndicator","dropdownStyles","dropdownMain","shadowColor","shadowOffset","shadowOpacity","shadowRadius","icon","textItem","placeholderStyle","alignSelf","selectedTextStyle","iconStyle","inputSearchStyle","dateData","setDateSelected","setValue","isFocused","setIsFocused","Dropdown","search","maxHeight","labelField","valueField","searchPlaceholder","onFocus","onBlur","renderLeftIcon","AntDesign","renderItem","HistoryScreen","dateSelected","DropdownComponent","originalData","uniqueDataArray","dateArray","getUniqueDateArray","feedItemData","runningArray","getDateArray","getDateDropdownData","getDropdownUniqueDates","plotStyles","container","plotCard","victoryAxisStyle","axis","stroke","ticks","tickLabels","axisLabel","victoryTotalLine","strokeWidth","parent","border","victoryDryLine","victoryWetLine","TimeLinePlot","_ref$foodType","VictoryChart","VictoryAxis","dependentAxis","tickFormat","tick","tickLabelComponent","VictoryLabel","angle","x","getDate","Number","getMonth","VictoryLine","accumulatePerDate","y","getLineStyle","filterFoodType","dates","getTime","minDate","Math","min","maxDate","max","allDatesInRange","currentDate","push","setDate","date","accumulatedAmount","reduce","sum","highLevelStyles","title","PlotScreen","contentContainerStyle","PlotCard","titleText","SettingsClearComponent","isModalVisible","setIsModalVisible","handleClearHistory","handleConfirmation","handleCancel","FriendRequestView","onAccept","onReject","userFriendRequests","friendRequest","FriendRequestCard","senderInfo","fetchFriendRequests","pendingFriendRequests","allFriendRequests","removeFriend","updateFriendsList","FriendListView","minUsersFriends","minUserFriend","FriendCard","friendId","minUser","sendFriendRequest","SendFriendRequestPopup","setSelectedUser","dropdownAvailableUsernames","selectedMinUser","user","handleSelectUser","alert","handleSendRequest","SettingsScreen","createRequestVisible","setCreateRequestVisible","fetchLoginUser","usernameQuery","passwordQuery","setError","password","validateToken","checkboxStyles","checkbox","checkboxLabel","checkboxContainer","navigation","setUsername","setPassword","rememberMe","setRememberMe","loginError","setLoginError","securePassword","setSecurePassword","autoLogging","navigate","handleLogin","_Fragment","autoCompleteType","textContentType","secureTextEntry","MaterialCommunityIcons","CheckBox","createUser","email","setEmail","confirmPassword","setConfirmPassword","confirmSecurePassword","setConfirmSecurePassword","autoCapitalize","test","emailIsValidated","Drawer","createDrawerNavigator","stack","createStackNavigator","drawerProps","drawerActiveBackgroundColor","drawerActiveTintColor","drawerInactiveTintColor","headerStyle","headerTitleStyle","headerTintColor","DrawerNavigator","handleLogout","Navigator","initialRouteName","screenOptions","drawerContent","Screen","component","options","drawerIcon","StackNavigator","listeners","drawerItemPress","e","preventDefault","LandingScreen","headerShown","SignUpScreen","App","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","this","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}